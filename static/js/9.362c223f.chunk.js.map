{"version":3,"sources":["views/SubmitProposal/SubmitProposal.js","views/SubmitProposal/index.js","components/Header/Header.js","components/Header/index.js"],"names":["BN","require","useStyles","makeStyles","theme","root","marginTop","spacing","marginBottom","paper","breakpoints","up","maxWidth","minWidth","title","textField","margin","marginRight","subscribeButton","fieldGroup","display","flexGrow","wrapper","position","down","textAlign","hiddenImage","image","statusMsg","marginLeft","button","width","SubmitProposal","props","className","useState","status","setStatus","setImage","classes","router","useRouter","web3Connect","useWeb3Connect","useEffect","loaded","connected","history","push","useForm","register","handleSubmit","onSubmit","data","a","console","log","body","uploadJson","hash","contracts","dao","methods","triggerSubmitProposal","allowance","daiAllowance","balance","daiBalance","Header","Typography","variant","TextField","fullWidth","label","name","inputRef","required","clsx","multiline","rows","type","onChange","preview","document","getElementById","file","querySelector","files","reader","FileReader","addEventListener","src","result","readAsDataURL","id","height","alt","style","Button","color","disabled","onClick","dai","triggerDaiApprove","execute","component","divContainer","size","startIcon","Fragment","gutterBottom","cursor"],"mappings":"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","file":"static/js/9.362c223f.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Typography, Button } from '@material-ui/core';\nimport Box from '@material-ui/core/Box';\nimport Paper from '@material-ui/core/Paper';\nimport Container from '@material-ui/core/Container';\nimport TextField from '@material-ui/core/TextField';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { useForm } from 'react-hook-form';\nimport useRouter from '../../utils/useRouter';\nimport { uploadJson, getJson } from '../../modules/pinata';\nimport { Page, WalletProfile } from '../../components';\nimport Header from '../../components/Header';\nimport ImageUploader from 'react-images-upload';\nimport useWeb3Connect from '../../utils/useWeb3Connect';\nimport HowToVoteIcon from '@material-ui/icons/HowToVote';\nconst BN = require('bn.js');\n\nconst STAKING_AMOUNT = 50;\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    // backgroundColor: theme.palette.white\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n  },\n  paper: {\n    [theme.breakpoints.up('md')]: {\n      maxWidth: '75%',\n      minWidth: 180,\n    },\n    width: '100%',\n    padding: theme.spacing(3),\n  },\n  title: {\n    // marginBottom: theme.spacing(2),\n  },\n  textField: {\n    margin: theme.spacing(1, 0),\n    [theme.breakpoints.up('sm')]: {\n      marginRight: theme.spacing(2),\n    },\n\n    // fontWeight: \"0.8em\"\n    // minWidth: 150\n  },\n  subscribeButton: {\n    // padding: theme.spacing(0, 1)\n  },\n  fieldGroup: {\n    [theme.breakpoints.up('sm')]: {\n      display: 'flex',\n      marginTop: theme.spacing(1),\n    },\n\n    alignItems: 'center',\n  },\n  flexGrow: {\n    flexGrow: 1,\n  },\n  wrapper: {\n    position: 'relative',\n    [theme.breakpoints.down('xs')]: {\n      textAlign: 'center',\n      marginTop: theme.spacing(2),\n    },\n    marginTop: theme.spacing(2),\n  },\n  hiddenImage: {\n    display: 'none',\n  },\n  image: {\n    display: 'block',\n  },\n  statusMsg: {\n    marginLeft: 16,\n  },\n  button: {\n    width: 190,\n  },\n}));\n\nconst SubmitProposal = props => {\n  const { className, ...rest } = props;\n  const [status, setStatus] = useState('DRAFT');\n  const [image, setImage] = useState(false);\n  const classes = useStyles();\n  const router = useRouter();\n  const web3Connect = useWeb3Connect();\n\n  useEffect(() => {\n    if (web3Connect.loaded && !web3Connect.connected) {\n      router.history.push('/');\n    }\n  }, [web3Connect]);\n\n  const { register, handleSubmit /* , watch */ /* , errors  */ } = useForm();\n\n  const onSubmit = async data => {\n    setStatus('IPFS_UPLOAD');\n    // const { title, description } = data;\n    console.log(data);\n\n    let body = { ...data, image };\n\n    let hash = await uploadJson(data.title, body);\n    setStatus('SUBMITTING_BLOCKCHAIN');\n\n    // console.log({ hash });\n    // let json = await getJson(hash);\n    // console.log({ json });\n    await web3Connect.contracts.dao.methods.triggerSubmitProposal(hash);\n\n    setStatus('SUBMITTED');\n  };\n\n  const previewFile = () => {\n    const preview = document.getElementById('logoImg');\n    const file = document.querySelector('input[type=file]').files[0];\n    const reader = new FileReader();\n\n    reader.addEventListener(\n      'load',\n      function() {\n        // convert image file to base64 string\n        preview.src = reader.result;\n        setImage(reader.result);\n      },\n      false\n    );\n\n    if (file) {\n      reader.readAsDataURL(file);\n    }\n  };\n  console.log({\n    status,\n    allowance: web3Connect.daiAllowance,\n    balance: web3Connect.daiBalance,\n  });\n  return (\n    <Page className={classes.root} title=\"Whoop Together | Submit Proposal\">\n      <Header />\n      <Typography variant=\"h5\" className={classes.title}>\n        Submit Proposal\n      </Typography>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        {/* <Box className={classes.fieldGroup}> */}\n        <TextField\n          fullWidth\n          label=\"Title\"\n          name=\"title\"\n          variant=\"outlined\"\n          inputRef={register({ required: true })}\n          className={clsx(classes.flexGrow, classes.textField)}\n          required\n        />\n        <TextField\n          fullWidth\n          label=\"Description\"\n          name=\"description\"\n          variant=\"outlined\"\n          inputRef={register({ required: true })}\n          className={clsx(classes.flexGrow, classes.textField)}\n          multiline\n          rows={5}\n          required\n        />\n        <TextField\n          fullWidth\n          label=\"Website\"\n          name=\"website\"\n          variant=\"outlined\"\n          inputRef={register({ required: true })}\n          className={clsx(classes.flexGrow, classes.textField)}\n          required\n        />\n        <TextField\n          fullWidth\n          label=\"Team\"\n          name=\"team\"\n          variant=\"outlined\"\n          inputRef={register}\n          className={clsx(classes.flexGrow, classes.textField)}\n          multiline\n          rows={3}\n        />\n        {/* <ImageUploader\n          withIcon={true}\n          buttonText=\"Project Logo\"\n          onChange={e => {\n            setImages(e);\n          }}\n          imgExtension={['.jpg', '.gif', '.png']}\n          maxFileSize={5242880}\n          withPreview={true}\n          // fileContainerStyle={{ boxShadow: 0 }}\n        /> */}\n        <Typography variant=\"caption\" display=\"block\">\n          Logo\n        </Typography>\n        <input type=\"file\" onChange={previewFile} />\n        <img\n          id=\"logoImg\"\n          src=\"\"\n          className={image ? classes.image : classes.hiddenImage}\n          height=\"200\"\n          alt=\"Image preview...\"\n        />\n\n        <Typography variant=\"body1\" style={{ marginTop: 16 }}>\n          In order to submit a proposol you need to stake {STAKING_AMOUNT} DAI.\n        </Typography>\n        <div className={classes.wrapper}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.button}\n            // type=\"submit\"\n            disabled={web3Connect.daiAllowance > 0} // TODO: update to 50Dai\n            onClick={async () => {\n              let execute = async () => {\n                setStatus('APPROVING_DAI');\n                await web3Connect.contracts.dai.methods.triggerDaiApprove(\n                  new BN(STAKING_AMOUNT)\n                );\n                setStatus('DAI_APPROVED');\n              };\n              execute();\n            }}\n          >\n            1. Allow 50 DAI\n          </Button>\n          {status === 'APPROVING_DAI' && (\n            <Typography\n              variant=\"body1\"\n              component=\"span\"\n              className={classes.statusMsg}\n            >\n              Allowing transferring of 50 DAI...\n            </Typography>\n          )}\n          {(status === 'DAI_APPROVED' || web3Connect.daiAllowance > 0) && (\n            <Typography\n              variant=\"body2\"\n              component=\"span\"\n              className={classes.statusMsg}\n            >\n              Allowance of 50 DAI complete!\n            </Typography>\n          )}\n        </div>\n        <div className={classes.wrapper}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.button}\n            type=\"submit\"\n            disabled={\n              (status !== 'DRAFT' && status !== 'DAI_APPROVED') ||\n              web3Connect.daiAllowance == 0 ||\n              web3Connect.daiBalance < STAKING_AMOUNT\n            }\n          >\n            2. Submit Proposal\n          </Button>\n          {web3Connect.daiBalance < STAKING_AMOUNT && (\n            <Typography\n              variant=\"body2\"\n              component=\"span\"\n              className={classes.statusMsg}\n              style={{ color: '#FF9494' }}\n            >\n              You don't have enough DAI on your wallet\n            </Typography>\n          )}\n          {status === 'IPFS_UPLOAD' && (\n            <Typography\n              variant=\"body2\"\n              component=\"span\"\n              className={classes.statusMsg}\n            >\n              Uploading proposal to IPFS...\n            </Typography>\n          )}\n          {status === 'SUBMITTING_BLOCKCHAIN' && (\n            <Typography\n              variant=\"body2\"\n              component=\"span\"\n              className={classes.statusMsg}\n            >\n              Submitting proposal to the DAO...\n            </Typography>\n          )}\n          {status === 'SUBMITTED' && (\n            <Typography\n              variant=\"body2\"\n              component=\"span\"\n              className={classes.statusMsg}\n            >\n              Proposal submitted to the DAO successfully!\n            </Typography>\n          )}\n        </div>\n        {status === 'SUBMITTED' && (\n          <div\n            className={classes.divContainer}\n            style={{\n              marginTop: 24,\n              marginBottom: 24,\n              textAlign: 'center',\n            }}\n          >\n            <Button\n              // variant=\"contained\"\n              color=\"primary\"\n              size=\"large\"\n              className={classes.button}\n              startIcon={<HowToVoteIcon />}\n              onClick={() => {\n                router.history.push('/proposals');\n              }}\n            >\n              Vote{' '}\n            </Button>\n          </div>\n        )}\n        {/* </Box> */}\n      </form>\n    </Page>\n  );\n};\n\nSubmitProposal.propTypes = {\n  className: PropTypes.string,\n};\n\nexport default SubmitProposal;\n","export { default } from './SubmitProposal';\n","/* eslint-disable no-undef */\nimport React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport useRouter from '../../utils/useRouter';\n\n// import useRouter from 'utils/useRouter';\nconst Header = props => {\n  const router = useRouter();\n  return (\n    <React.Fragment>\n      <div style={{ marginBottom: 16 }}>\n        <Typography\n          gutterBottom\n          variant=\"h4\"\n          style={{ marginTop: 16, cursor: 'pointer' }}\n          onClick={() => {\n            router.history.push('/');\n          }}\n        >\n          WhoopTogether\n        </Typography>\n\n        <Typography variant=\"body1\" style={{ marginTop: 16 }}>\n          Deposit your DAI. Let your idle interest support community projects.\n          Vote DAO style on twitter for your favourite project every 2 weeks.\n          Interest from the pool is sent to the chosen community project for 2\n          weeks if selected by the DAO. Withdraw your original DAI at anytime.\n        </Typography>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default Header;\n","export { default } from './Header';\n"],"sourceRoot":""}