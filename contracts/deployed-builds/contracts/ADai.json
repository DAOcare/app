{
  "contractName": "ADai",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract MockERC20",
          "name": "daiAddress",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MinterAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MinterRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addMinter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burnFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "dai",
      "outputs": [
        {
          "internalType": "contract MockERC20",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "internalType": "uint8",
          "name": "decimals",
          "type": "uint8"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isMinter",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceMinter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "steward",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "redeem",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        }
      ],
      "name": "redirectInterestStream",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract MockERC20\",\"name\":\"daiAddress\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"MinterAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"MinterRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addMinter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"dai\",\"outputs\":[{\"internalType\":\"contract MockERC20\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isMinter\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"redeem\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"redirectInterestStream\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceMinter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"steward\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}.     * Requirements:     * - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys `amount` tokens from the caller.     * See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"See {ERC20-_burnFrom}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei.     * NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address.\"},\"initialize(string,string,uint8)\":{\"details\":\"Sets the values for `name`, `symbol`, and `decimals`. All three of these values are immutable: they can only be set once during construction.\"},\"mint(address,uint256)\":{\"details\":\"See {ERC20-_mint}.     * Requirements:     * - the caller must have the {MinterRole}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}.     * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20};     * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/home/jasoons/Documents/temp/app/contracts/contracts/mocks/ADai.sol\":\"ADai\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/jasoons/Documents/temp/app/contracts/contracts/interfaces/IADai.sol\":{\"keccak256\":\"0x6905e9b31ee75da75655d687004c5fa1dbe25d8216f5e8a7e2bd0110c39f3928\",\"urls\":[\"bzz-raw://6924022c43203c9f7d540d71aca02c9bfeae9497d6d4d932466cdcee93ce47c0\",\"dweb:/ipfs/Qmbw76aKLppAZJHB33pAB6ahEHZ6bpVqazYzr3sP8Fy1XJ\"]},\"/home/jasoons/Documents/temp/app/contracts/contracts/mocks/ADai.sol\":{\"keccak256\":\"0xb8d6726c1aa6a326928ca1bcda5b8848105f122cc87f75f2e7bafb37989e90b1\",\"urls\":[\"bzz-raw://19e0a4df782f2a696a3a63d790934030e14c2e69559aea6cb90dcc6f0157eacb\",\"dweb:/ipfs/QmegU6iFyWAfzeZfpprkRCktBEnb3KLoH6Vkc4iYBuX69D\"]},\"/home/jasoons/Documents/temp/app/contracts/contracts/mocks/MockERC20.sol\":{\"keccak256\":\"0x2d01a5b1b0deeb22096cbe98367eeb632bfa4f531d7833f862f80c0c7f9a6aeb\",\"urls\":[\"bzz-raw://110b1d4785a7f4ec62fb9e64000f75cdc539d54c3108b8d2c1fa5ac475922a02\",\"dweb:/ipfs/QmTUuM8cLuMTnwwiyHU2VRakHLBbzc7kn8ktRZDQtxTZWF\"]},\"@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol\":{\"keccak256\":\"0x3491510fa4862af1a43f6c860d9cf7392240196540cd3c0eea79d374d419c5a1\",\"urls\":[\"bzz-raw://3e51386d74eb723d3acaaddafce1dd0b4082ad4c10ddba6b9fc154aad2930d02\",\"dweb:/ipfs/QmcA8Huap1c7YjdVjx5TGasxKNMLgsa3XyLvQUaMa1nMt8\"]},\"@openzeppelin/contracts-ethereum-package/contracts/access/Roles.sol\":{\"keccak256\":\"0xb002c378d7b82a101bd659c341518953ca0919d342c0a400196982c0e7e7bcdb\",\"urls\":[\"bzz-raw://00a788c4631466c220b385bdd100c571d24b2deccd657615cfbcef6cadf669a4\",\"dweb:/ipfs/QmTEwDbjJNxmMNCDMqtuou3dyM8Wtp8Q9NFvn7SAVM7Jf3\"]},\"@openzeppelin/contracts-ethereum-package/contracts/access/roles/MinterRole.sol\":{\"keccak256\":\"0xdf50b7ae128ae6234bf297a03a7622b3d146734479b26b749052e61ee9dae650\",\"urls\":[\"bzz-raw://93218d23526253d8e8634e5f5be8c21e3c46f12992eae378b202ca22d48564a0\",\"dweb:/ipfs/QmfG4XhTbsxnzCGXgsvxWmuJtU8snNaMEpW9drGde2yY6S\"]},\"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzz-raw://31113152e1ddb78fe7a4197f247591ca894e93f916867beb708d8e747b6cc74f\",\"dweb:/ipfs/QmbZaJyXdpsYGykVhHH9qpVGQg9DGCxE2QufbCUy3daTgq\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x1eee490bb6b1751e8d39e2670fa0d04dd2e8b7af6da33e1fb4c1593e771b56fb\",\"urls\":[\"bzz-raw://cf10c73acede242d453658d9b6edadab89de71b0818c7a3d35d732db62dfffb3\",\"dweb:/ipfs/QmcXcS2ZJpwwoJ5WQtPUn3Gg7zJadqvfCPUcGW14mmXfsC\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Burnable.sol\":{\"keccak256\":\"0xf2e46c19ea19035e793a4f455032784886c5b4dc43943b615cf5c09c16137e03\",\"urls\":[\"bzz-raw://b1db63829b0eee269d924a6930845ef6cb5aa869c754d9db78d53af27d6653ea\",\"dweb:/ipfs/QmXqs1mVugjBkMDsdRLwBygpbnv2ZpZsV2aQUJYonW158h\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Detailed.sol\":{\"keccak256\":\"0x704e0cb521f0b571096a72266a34d9a2a59a89853b5b271bc97fa307a4cc4dcc\",\"urls\":[\"bzz-raw://96317e95d4c301e54ff42f2b6dede996ac4d714e50a6b5552c68fbb378330dcf\",\"dweb:/ipfs/QmawKJQVK7yXeBhGcvkmujYpo8n7CWQJizDV2dWzsxupnh\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Mintable.sol\":{\"keccak256\":\"0x4342dbe1cb06cc0f0ee8929d6ab41ac68e39a1bac3b9c593e205a358ad243aee\",\"urls\":[\"bzz-raw://15a916b9dd4a3597f25381adfd5cf9abf8fbf3dab78ff001f63bc471b1cdb8f7\",\"dweb:/ipfs/QmeALu4iYnRtoPbnt5xcHHNpTqV3rPQg5Xg7rK67KqA3RB\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe5bb0f57cff3e299f360052ba50f1ea0fff046df2be070b6943e0e3c3fdad8a9\",\"urls\":[\"bzz-raw://59fd025151435da35faa8093a5c7a17de02de9d08ad27275c5cdf05050820d91\",\"dweb:/ipfs/QmQMvwEcPhoRXzbXyrdoeRtvLoifUW9Qh7Luho7bmUPRkc\"]},\"@openzeppelin/upgrades/contracts/Initializable.sol\":{\"keccak256\":\"0x9bfec92e36234ecc99b5d37230acb6cd1f99560233753162204104a4897e8721\",\"urls\":[\"bzz-raw://5cf7c208583d4d046d75bd99f5507412ab01cce9dd9f802ce9768a416d93ea2f\",\"dweb:/ipfs/QmcQS1BBMPpVEkXP3qzwSjxHNrqDek8YeR7xbVWDC9ApC7\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162001cd138038062001cd1833981810160405260208110156200003757600080fd5b505160408051808201825260048152636144616960e01b60208281019190915282518084019093526002835261105160f21b8382015290919060129033906200008f90859085908590620006a6620000d2821b17901c565b620000a581620001c560201b62000a721760201c565b505061013580546001600160a01b0319166001600160a01b039490941693909317909255506200056d9050565b600054610100900460ff1680620000f75750620000f76001600160e01b036200028f16565b8062000106575060005460ff16155b620001435760405162461bcd60e51b815260040180806020018281038252602e81526020018062001ca3602e913960400191505060405180910390fd5b600054610100900460ff161580156200016f576000805460ff1961ff0019909116610100171660011790555b8351620001849060ff906020870190620004cb565b5082516200019b90610100906020860190620004cb565b50610101805460ff191660ff84161790558015620001bf576000805461ff00191690555b50505050565b600054610100900460ff1680620001ea5750620001ea6001600160e01b036200028f16565b80620001f9575060005460ff16155b620002365760405162461bcd60e51b815260040180806020018281038252602e81526020018062001ca3602e913960400191505060405180910390fd5b600054610100900460ff1615801562000262576000805460ff1961ff0019909116610100171660011790555b62000278826200029660201b620012611760201c565b80156200028b576000805461ff00191690555b5050565b303b155b90565b600054610100900460ff1680620002bb5750620002bb6001600160e01b036200028f16565b80620002ca575060005460ff16155b620003075760405162461bcd60e51b815260040180806020018281038252602e81526020018062001ca3602e913960400191505060405180910390fd5b600054610100900460ff1615801562000333576000805460ff1961ff0019909116610100171660011790555b62000347826001600160e01b036200036016565b620002785762000278826001600160e01b036200038316565b60006200037d826068620003d560201b620011fa1790919060201c565b92915050565b6200039e8160686200043e60201b620013461790919060201c565b6040516001600160a01b038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b60006001600160a01b0382166200041e5760405162461bcd60e51b815260040180806020018281038252602281526020018062001c816022913960400191505060405180910390fd5b506001600160a01b03166000908152602091909152604090205460ff1690565b6200045382826001600160e01b03620003d516565b15620004a6576040805162461bcd60e51b815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500604482015290519081900360640190fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200050e57805160ff19168380011785556200053e565b828001600101855582156200053e579182015b828111156200053e57825182559160200191906001019062000521565b506200054c92915062000550565b5090565b6200029391905b808211156200054c576000815560010162000557565b611704806200057d6000396000f3fe608060405234801561001057600080fd5b506004361061014d5760003560e01c806370a08231116100c3578063a9059cbb1161007c578063a9059cbb14610524578063aa271e1a14610550578063c4d66de814610576578063db006a751461059c578063dd62ed3e146105b9578063f4b9fa75146105e75761014d565b806370a082311461047057806379cc67901461049657806395d89b41146104c2578063983b2d56146104ca57806398650275146104f0578063a457c2d7146104f85761014d565b806323b872dd1161011557806323b872dd14610383578063313ce567146103b957806339509351146103d757806340c10f191461040357806342966c681461042f578063637eea191461044c5761014d565b806306fdde0314610152578063095ea7b3146101cf5780630e49072d1461020f5780631624f6c61461023757806318160ddd14610369575b600080fd5b61015a6105ef565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561019457818101518382015260200161017c565b50505050905090810190601f1680156101c15780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101fb600480360360408110156101e557600080fd5b506001600160a01b038135169060200135610686565b604080519115158252519081900360200190f35b6102356004803603602081101561022557600080fd5b50356001600160a01b03166106a3565b005b6102356004803603606081101561024d57600080fd5b81019060208101813564010000000081111561026857600080fd5b82018360208201111561027a57600080fd5b8035906020019184600183028401116401000000008311171561029c57600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092959493602081019350359150506401000000008111156102ef57600080fd5b82018360208201111561030157600080fd5b8035906020019184600183028401116401000000008311171561032357600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295505050903560ff1691506106a69050565b610371610784565b60408051918252519081900360200190f35b6101fb6004803603606081101561039957600080fd5b506001600160a01b0381358116916020810135909116906040013561078a565b6103c1610817565b6040805160ff9092168252519081900360200190f35b6101fb600480360360408110156103ed57600080fd5b506001600160a01b038135169060200135610821565b6101fb6004803603604081101561041957600080fd5b506001600160a01b038135169060200135610875565b6102356004803603602081101561044557600080fd5b50356108cc565b6104546108dd565b604080516001600160a01b039092168252519081900360200190f35b6103716004803603602081101561048657600080fd5b50356001600160a01b03166108ed565b610235600480360360408110156104ac57600080fd5b506001600160a01b038135169060200135610908565b61015a610916565b610235600480360360208110156104e057600080fd5b50356001600160a01b0316610976565b6102356109c5565b6101fb6004803603604081101561050e57600080fd5b506001600160a01b0381351690602001356109d7565b6101fb6004803603604081101561053a57600080fd5b506001600160a01b038135169060200135610a45565b6101fb6004803603602081101561056657600080fd5b50356001600160a01b0316610a59565b6102356004803603602081101561058c57600080fd5b50356001600160a01b0316610a72565b610235600480360360208110156105b257600080fd5b5035610b1d565b610371600480360360408110156105cf57600080fd5b506001600160a01b0381358116916020013516610ba1565b610454610bcc565b60ff8054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561067b5780601f106106505761010080835404028352916020019161067b565b820191906000526020600020905b81548152906001019060200180831161065e57829003601f168201915b505050505090505b90565b600061069a610693610bdc565b8484610be0565b50600192915050565b50565b600054610100900460ff16806106bf57506106bf610ccc565b806106cd575060005460ff16155b6107085760405162461bcd60e51b815260040180806020018281038252602e8152602001806115ef602e913960400191505060405180910390fd5b600054610100900460ff16158015610733576000805460ff1961ff0019909116610100171660011790555b83516107469060ff90602087019061142e565b50825161075b9061010090602086019061142e565b50610101805460ff191660ff8416179055801561077e576000805461ff00191690555b50505050565b60355490565b6000610797848484610cd2565b61080d846107a3610bdc565b610808856040518060600160405280602881526020016115a5602891396001600160a01b038a166000908152603460205260408120906107e1610bdc565b6001600160a01b03168152602081019190915260400160002054919063ffffffff610e3016565b610be0565b5060019392505050565b6101015460ff1690565b600061069a61082e610bdc565b84610808856034600061083f610bdc565b6001600160a01b03908116825260208083019390935260409182016000908120918c16815292529020549063ffffffff610ec716565b6000610887610882610bdc565b610a59565b6108c25760405162461bcd60e51b81526004018080602001828103825260308152602001806115546030913960400191505060405180910390fd5b61069a8383610f28565b6106a36108d7610bdc565b8261101a565b610134546001600160a01b031681565b6001600160a01b031660009081526033602052604090205490565b6109128282611116565b5050565b6101008054604080516020601f60026000196001871615880201909516949094049384018190048102820181019092528281526060939092909183018282801561067b5780601f106106505761010080835404028352916020019161067b565b610981610882610bdc565b6109bc5760405162461bcd60e51b81526004018080602001828103825260308152602001806115546030913960400191505060405180910390fd5b6106a38161116a565b6109d56109d0610bdc565b6111b2565b565b600061069a6109e4610bdc565b84610808856040518060600160405280602581526020016116ab6025913960346000610a0e610bdc565b6001600160a01b03908116825260208083019390935260409182016000908120918d1681529252902054919063ffffffff610e3016565b600061069a610a52610bdc565b8484610cd2565b6000610a6c60688363ffffffff6111fa16565b92915050565b600054610100900460ff1680610a8b5750610a8b610ccc565b80610a99575060005460ff16155b610ad45760405162461bcd60e51b815260040180806020018281038252602e8152602001806115ef602e913960400191505060405180910390fd5b600054610100900460ff16158015610aff576000805460ff1961ff0019909116610100171660011790555b610b0882611261565b8015610912576000805461ff00191690555050565b61013554604080516340c10f1960e01b81523360048201526024810184905290516001600160a01b03909216916340c10f19916044808201926020929091908290030181600087803b158015610b7257600080fd5b505af1158015610b86573d6000803e3d6000fd5b505050506040513d6020811015610b9c57600080fd5b505050565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b610135546001600160a01b031681565b3390565b6001600160a01b038316610c255760405162461bcd60e51b81526004018080602001828103825260248152602001806116876024913960400191505060405180910390fd5b6001600160a01b038216610c6a5760405162461bcd60e51b815260040180806020018281038252602281526020018061150c6022913960400191505060405180910390fd5b6001600160a01b03808416600081815260346020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b303b1590565b6001600160a01b038316610d175760405162461bcd60e51b81526004018080602001828103825260258152602001806116626025913960400191505060405180910390fd5b6001600160a01b038216610d5c5760405162461bcd60e51b81526004018080602001828103825260238152602001806114c76023913960400191505060405180910390fd5b610d9f8160405180606001604052806026815260200161152e602691396001600160a01b038616600090815260336020526040902054919063ffffffff610e3016565b6001600160a01b038085166000908152603360205260408082209390935590841681522054610dd4908263ffffffff610ec716565b6001600160a01b0380841660008181526033602090815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008184841115610ebf5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610e84578181015183820152602001610e6c565b50505050905090810190601f168015610eb15780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b600082820183811015610f21576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b6001600160a01b038216610f83576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b603554610f96908263ffffffff610ec716565b6035556001600160a01b038216600090815260336020526040902054610fc2908263ffffffff610ec716565b6001600160a01b03831660008181526033602090815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b6001600160a01b03821661105f5760405162461bcd60e51b81526004018080602001828103825260218152602001806116416021913960400191505060405180910390fd5b6110a2816040518060600160405280602281526020016114ea602291396001600160a01b038516600090815260336020526040902054919063ffffffff610e3016565b6001600160a01b0383166000908152603360205260409020556035546110ce908263ffffffff61130416565b6035556040805182815290516000916001600160a01b038516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b611120828261101a565b6109128261112c610bdc565b6108088460405180606001604052806024815260200161161d602491396001600160a01b0388166000908152603460205260408120906107e1610bdc565b61117b60688263ffffffff61134616565b6040516001600160a01b038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b6111c360688263ffffffff6113c716565b6040516001600160a01b038216907fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669290600090a250565b60006001600160a01b0382166112415760405162461bcd60e51b81526004018080602001828103825260228152602001806115cd6022913960400191505060405180910390fd5b506001600160a01b03166000908152602091909152604090205460ff1690565b600054610100900460ff168061127a575061127a610ccc565b80611288575060005460ff16155b6112c35760405162461bcd60e51b815260040180806020018281038252602e8152602001806115ef602e913960400191505060405180910390fd5b600054610100900460ff161580156112ee576000805460ff1961ff0019909116610100171660011790555b6112f782610a59565b610b0857610b088261116a565b6000610f2183836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610e30565b61135082826111fa565b156113a2576040805162461bcd60e51b815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500604482015290519081900360640190fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b6113d182826111fa565b61140c5760405162461bcd60e51b81526004018080602001828103825260218152602001806115846021913960400191505060405180910390fd5b6001600160a01b0316600090815260209190915260409020805460ff19169055565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061146f57805160ff191683800117855561149c565b8280016001018555821561149c579182015b8281111561149c578251825591602001919060010190611481565b506114a89291506114ac565b5090565b61068391905b808211156114a857600081556001016114b256fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a206275726e20616d6f756e7420657863656564732062616c616e636545524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63654d696e746572526f6c653a2063616c6c657220646f6573206e6f74206861766520746865204d696e74657220726f6c65526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c6545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365526f6c65733a206163636f756e7420697320746865207a65726f2061646472657373436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a656445524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e636545524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa265627a7a7231582029f676e091fbcbd4dbc26c6588aedb7d0401d4e4bd7f007c110b4ef260c7179064736f6c63430005100032526f6c65733a206163636f756e7420697320746865207a65726f2061646472657373436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a6564",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061014d5760003560e01c806370a08231116100c3578063a9059cbb1161007c578063a9059cbb14610524578063aa271e1a14610550578063c4d66de814610576578063db006a751461059c578063dd62ed3e146105b9578063f4b9fa75146105e75761014d565b806370a082311461047057806379cc67901461049657806395d89b41146104c2578063983b2d56146104ca57806398650275146104f0578063a457c2d7146104f85761014d565b806323b872dd1161011557806323b872dd14610383578063313ce567146103b957806339509351146103d757806340c10f191461040357806342966c681461042f578063637eea191461044c5761014d565b806306fdde0314610152578063095ea7b3146101cf5780630e49072d1461020f5780631624f6c61461023757806318160ddd14610369575b600080fd5b61015a6105ef565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561019457818101518382015260200161017c565b50505050905090810190601f1680156101c15780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101fb600480360360408110156101e557600080fd5b506001600160a01b038135169060200135610686565b604080519115158252519081900360200190f35b6102356004803603602081101561022557600080fd5b50356001600160a01b03166106a3565b005b6102356004803603606081101561024d57600080fd5b81019060208101813564010000000081111561026857600080fd5b82018360208201111561027a57600080fd5b8035906020019184600183028401116401000000008311171561029c57600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092959493602081019350359150506401000000008111156102ef57600080fd5b82018360208201111561030157600080fd5b8035906020019184600183028401116401000000008311171561032357600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295505050903560ff1691506106a69050565b610371610784565b60408051918252519081900360200190f35b6101fb6004803603606081101561039957600080fd5b506001600160a01b0381358116916020810135909116906040013561078a565b6103c1610817565b6040805160ff9092168252519081900360200190f35b6101fb600480360360408110156103ed57600080fd5b506001600160a01b038135169060200135610821565b6101fb6004803603604081101561041957600080fd5b506001600160a01b038135169060200135610875565b6102356004803603602081101561044557600080fd5b50356108cc565b6104546108dd565b604080516001600160a01b039092168252519081900360200190f35b6103716004803603602081101561048657600080fd5b50356001600160a01b03166108ed565b610235600480360360408110156104ac57600080fd5b506001600160a01b038135169060200135610908565b61015a610916565b610235600480360360208110156104e057600080fd5b50356001600160a01b0316610976565b6102356109c5565b6101fb6004803603604081101561050e57600080fd5b506001600160a01b0381351690602001356109d7565b6101fb6004803603604081101561053a57600080fd5b506001600160a01b038135169060200135610a45565b6101fb6004803603602081101561056657600080fd5b50356001600160a01b0316610a59565b6102356004803603602081101561058c57600080fd5b50356001600160a01b0316610a72565b610235600480360360208110156105b257600080fd5b5035610b1d565b610371600480360360408110156105cf57600080fd5b506001600160a01b0381358116916020013516610ba1565b610454610bcc565b60ff8054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561067b5780601f106106505761010080835404028352916020019161067b565b820191906000526020600020905b81548152906001019060200180831161065e57829003601f168201915b505050505090505b90565b600061069a610693610bdc565b8484610be0565b50600192915050565b50565b600054610100900460ff16806106bf57506106bf610ccc565b806106cd575060005460ff16155b6107085760405162461bcd60e51b815260040180806020018281038252602e8152602001806115ef602e913960400191505060405180910390fd5b600054610100900460ff16158015610733576000805460ff1961ff0019909116610100171660011790555b83516107469060ff90602087019061142e565b50825161075b9061010090602086019061142e565b50610101805460ff191660ff8416179055801561077e576000805461ff00191690555b50505050565b60355490565b6000610797848484610cd2565b61080d846107a3610bdc565b610808856040518060600160405280602881526020016115a5602891396001600160a01b038a166000908152603460205260408120906107e1610bdc565b6001600160a01b03168152602081019190915260400160002054919063ffffffff610e3016565b610be0565b5060019392505050565b6101015460ff1690565b600061069a61082e610bdc565b84610808856034600061083f610bdc565b6001600160a01b03908116825260208083019390935260409182016000908120918c16815292529020549063ffffffff610ec716565b6000610887610882610bdc565b610a59565b6108c25760405162461bcd60e51b81526004018080602001828103825260308152602001806115546030913960400191505060405180910390fd5b61069a8383610f28565b6106a36108d7610bdc565b8261101a565b610134546001600160a01b031681565b6001600160a01b031660009081526033602052604090205490565b6109128282611116565b5050565b6101008054604080516020601f60026000196001871615880201909516949094049384018190048102820181019092528281526060939092909183018282801561067b5780601f106106505761010080835404028352916020019161067b565b610981610882610bdc565b6109bc5760405162461bcd60e51b81526004018080602001828103825260308152602001806115546030913960400191505060405180910390fd5b6106a38161116a565b6109d56109d0610bdc565b6111b2565b565b600061069a6109e4610bdc565b84610808856040518060600160405280602581526020016116ab6025913960346000610a0e610bdc565b6001600160a01b03908116825260208083019390935260409182016000908120918d1681529252902054919063ffffffff610e3016565b600061069a610a52610bdc565b8484610cd2565b6000610a6c60688363ffffffff6111fa16565b92915050565b600054610100900460ff1680610a8b5750610a8b610ccc565b80610a99575060005460ff16155b610ad45760405162461bcd60e51b815260040180806020018281038252602e8152602001806115ef602e913960400191505060405180910390fd5b600054610100900460ff16158015610aff576000805460ff1961ff0019909116610100171660011790555b610b0882611261565b8015610912576000805461ff00191690555050565b61013554604080516340c10f1960e01b81523360048201526024810184905290516001600160a01b03909216916340c10f19916044808201926020929091908290030181600087803b158015610b7257600080fd5b505af1158015610b86573d6000803e3d6000fd5b505050506040513d6020811015610b9c57600080fd5b505050565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b610135546001600160a01b031681565b3390565b6001600160a01b038316610c255760405162461bcd60e51b81526004018080602001828103825260248152602001806116876024913960400191505060405180910390fd5b6001600160a01b038216610c6a5760405162461bcd60e51b815260040180806020018281038252602281526020018061150c6022913960400191505060405180910390fd5b6001600160a01b03808416600081815260346020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b303b1590565b6001600160a01b038316610d175760405162461bcd60e51b81526004018080602001828103825260258152602001806116626025913960400191505060405180910390fd5b6001600160a01b038216610d5c5760405162461bcd60e51b81526004018080602001828103825260238152602001806114c76023913960400191505060405180910390fd5b610d9f8160405180606001604052806026815260200161152e602691396001600160a01b038616600090815260336020526040902054919063ffffffff610e3016565b6001600160a01b038085166000908152603360205260408082209390935590841681522054610dd4908263ffffffff610ec716565b6001600160a01b0380841660008181526033602090815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008184841115610ebf5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610e84578181015183820152602001610e6c565b50505050905090810190601f168015610eb15780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b600082820183811015610f21576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b6001600160a01b038216610f83576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b603554610f96908263ffffffff610ec716565b6035556001600160a01b038216600090815260336020526040902054610fc2908263ffffffff610ec716565b6001600160a01b03831660008181526033602090815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b6001600160a01b03821661105f5760405162461bcd60e51b81526004018080602001828103825260218152602001806116416021913960400191505060405180910390fd5b6110a2816040518060600160405280602281526020016114ea602291396001600160a01b038516600090815260336020526040902054919063ffffffff610e3016565b6001600160a01b0383166000908152603360205260409020556035546110ce908263ffffffff61130416565b6035556040805182815290516000916001600160a01b038516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b611120828261101a565b6109128261112c610bdc565b6108088460405180606001604052806024815260200161161d602491396001600160a01b0388166000908152603460205260408120906107e1610bdc565b61117b60688263ffffffff61134616565b6040516001600160a01b038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b6111c360688263ffffffff6113c716565b6040516001600160a01b038216907fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669290600090a250565b60006001600160a01b0382166112415760405162461bcd60e51b81526004018080602001828103825260228152602001806115cd6022913960400191505060405180910390fd5b506001600160a01b03166000908152602091909152604090205460ff1690565b600054610100900460ff168061127a575061127a610ccc565b80611288575060005460ff16155b6112c35760405162461bcd60e51b815260040180806020018281038252602e8152602001806115ef602e913960400191505060405180910390fd5b600054610100900460ff161580156112ee576000805460ff1961ff0019909116610100171660011790555b6112f782610a59565b610b0857610b088261116a565b6000610f2183836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610e30565b61135082826111fa565b156113a2576040805162461bcd60e51b815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500604482015290519081900360640190fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b6113d182826111fa565b61140c5760405162461bcd60e51b81526004018080602001828103825260218152602001806115846021913960400191505060405180910390fd5b6001600160a01b0316600090815260209190915260409020805460ff19169055565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061146f57805160ff191683800117855561149c565b8280016001018555821561149c579182015b8281111561149c578251825591602001919060010190611481565b506114a89291506114ac565b5090565b61068391905b808211156114a857600081556001016114b256fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a206275726e20616d6f756e7420657863656564732062616c616e636545524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63654d696e746572526f6c653a2063616c6c657220646f6573206e6f74206861766520746865204d696e74657220726f6c65526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c6545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365526f6c65733a206163636f756e7420697320746865207a65726f2061646472657373436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a656445524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e636545524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa265627a7a7231582029f676e091fbcbd4dbc26c6588aedb7d0401d4e4bd7f007c110b4ef260c7179064736f6c63430005100032",
  "sourceMap": "185:322:8:-;;;247:118;8:9:-1;5:2;;;30:1;27;20:12;5:2;247:118:8;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;247:118:8;486:210:10;;;;;;;;;;;-1:-1:-1;;;247:118:8;486:210:10;;;;;;;;;;;;;;;;;;-1:-1:-1;;;486:210:10;;;;;;;320:2:8;;324:10;;605:48:10;;486:210;;;;320:2:8;;605:24:10;;;;;:48;;:::i;:::-;659:32;684:6;659:24;;;;;:32;;:::i;:::-;-1:-1:-1;;344:3:8;:16;;-1:-1:-1;;;;;;344:16:8;-1:-1:-1;;;;;344:16:8;;;;;;;;;;;-1:-1:-1;185:322:8;;-1:-1:-1;185:322:8;492:182:17;1024:12:20;;;;;;;;:31;;-1:-1:-1;1040:15:20;-1:-1:-1;;;;;1040:13:20;:15;:::i;:::-;1024:47;;;-1:-1:-1;1060:11:20;;;;1059:12;1024:47;1016:106;;;;-1:-1:-1;;;1016:106:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;-1:-1:-1;;;;1198:19:20;;;;;1225:18;1213:4;1225:18;;;1170:80;599:12:17;;;;:5;;:12;;;;;:::i;:::-;-1:-1:-1;621:16:17;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;647:9:17;:20;;-1:-1:-1;;647:20:17;;;;;;;1264:55:20;;;;1307:5;1292:20;;-1:-1:-1;;1292:20:20;;;1264:55;492:182:17;;;;:::o;448:101:18:-;1024:12:20;;;;;;;;:31;;-1:-1:-1;1040:15:20;-1:-1:-1;;;;;1040:13:20;:15;:::i;:::-;1024:47;;;-1:-1:-1;1060:11:20;;;;1059:12;1024:47;1016:106;;;;-1:-1:-1;;;1016:106:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;-1:-1:-1;;;;1198:19:20;;;;;1225:18;1213:4;1225:18;;;1170:80;513:29:18;535:6;513:21;;;;;:29;;:::i;:::-;1268:14:20;1264:55;;;1307:5;1292:20;;-1:-1:-1;;1292:20:20;;;1264:55;448:101:18;;:::o;1409:498:20:-;1820:4;1864:17;1895:7;1409:498;;:::o;361:137:13:-;1024:12:20;;;;;;;;:31;;-1:-1:-1;1040:15:20;-1:-1:-1;;;;;1040:13:20;:15;:::i;:::-;1024:47;;;-1:-1:-1;1060:11:20;;;;1059:12;1024:47;1016:106;;;;-1:-1:-1;;;1016:106:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;-1:-1:-1;;;;1198:19:20;;;;;1225:18;1213:4;1225:18;;;1170:80;431:16:13;440:6;-1:-1:-1;;;;;431:8:13;:16;:::i;:::-;426:66;;463:18;474:6;-1:-1:-1;;;;;463:10:13;:18;:::i;643:107::-;699:4;722:21;735:7;722:8;:12;;;;;;:21;;;;:::i;:::-;715:28;643:107;-1:-1:-1;;643:107:13:o;935:119::-;991:21;1004:7;991:8;:12;;;;;;:21;;;;:::i;:::-;1027:20;;-1:-1:-1;;;;;1027:20:13;;;;;;;;935:119;:::o;779:200:12:-;851:4;-1:-1:-1;;;;;875:21:12;;867:68;;;;-1:-1:-1;;;867:68:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;952:20:12;:11;:20;;;;;;;;;;;;;;;779:200::o;260:175::-;337:18;341:4;347:7;-1:-1:-1;;;;;337:3:12;:18;:::i;:::-;336:19;328:63;;;;;-1:-1:-1;;;328:63:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;401:20:12;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;401:27:12;424:4;401:27;;;260:175::o;185:322:8:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;185:322:8;;;-1:-1:-1;185:322:8;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "185:322:8:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;185:322:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;739:81:17;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;739:81:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2577:149:15;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2577:149:15;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;451:54:8;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;451:54:8;-1:-1:-1;;;;;451:54:8;;:::i;:::-;;492:182:17;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;492:182:17;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;492:182:17;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;492:182:17;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;492:182:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;492:182:17;;;;;;;;-1:-1:-1;492:182:17;;-1:-1:-1;;21:11;5:28;;2:2;;;46:1;43;36:12;2:2;492:182:17;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;492:182:17;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;492:182:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;492:182:17;;-1:-1:-1;;;492:182:17;;;;;-1:-1:-1;492:182:17;;-1:-1:-1;492:182:17:i;1636:89:15:-;;;:::i;:::-;;;;;;;;;;;;;;;;3184:300;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3184:300:15;;;;;;;;;;;;;;;;;:::i;1567:81:17:-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3879:207:15;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3879:207:15;;;;;;;;:::i;685:140:18:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;685:140:18;;;;;;;;:::i;516:81:16:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;516:81:16;;:::i;459:22:10:-;;;:::i;:::-;;;;-1:-1:-1;;;;;459:22:10;;;;;;;;;;;;;;1783:108:15;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1783:108:15;-1:-1:-1;;;;;1783:108:15;;:::i;654:101:16:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;654:101:16;;;;;;;;:::i;933:85:17:-;;;:::i;756:90:13:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;756:90:13;-1:-1:-1;;;;;756:90:13;;:::i;852:77::-;;;:::i;4573:258:15:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4573:258:15;;;;;;;;:::i;2094:155::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2094:155:15;;;;;;;;:::i;643:107:13:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;643:107:13;-1:-1:-1;;;;;643:107:13;;:::i;448:101:18:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;448:101:18;-1:-1:-1;;;;;448:101:18;;:::i;368:80:8:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;368:80:8;;:::i;2307:132:15:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2307:132:15;;;;;;;;;;:::i;223:20:8:-;;;:::i;739:81:17:-;808:5;801:12;;;;;;;;-1:-1:-1;;801:12:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;776:13;;801:12;;808:5;;801:12;;808:5;801:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;739:81;;:::o;2577:149:15:-;2643:4;2659:39;2668:12;:10;:12::i;:::-;2682:7;2691:6;2659:8;:39::i;:::-;-1:-1:-1;2715:4:15;2577:149;;;;:::o;451:54:8:-;;:::o;492:182:17:-;1024:12:20;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:20;;;;1059:12;1024:47;1016:106;;;;-1:-1:-1;;;1016:106:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;-1:-1:-1;;;;1198:19:20;;;;;1225:18;1213:4;1225:18;;;1170:80;599:12:17;;;;:5;;:12;;;;;:::i;:::-;-1:-1:-1;621:16:17;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;647:9:17;:20;;-1:-1:-1;;647:20:17;;;;;;;1264:55:20;;;;1307:5;1292:20;;-1:-1:-1;;1292:20:20;;;1264:55;492:182:17;;;;:::o;1636:89:15:-;1706:12;;1636:89;:::o;3184:300::-;3273:4;3289:36;3299:6;3307:9;3318:6;3289:9;:36::i;:::-;3335:121;3344:6;3352:12;:10;:12::i;:::-;3366:89;3404:6;3366:89;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3366:19:15;;;;;;:11;:19;;;;;;3386:12;:10;:12::i;:::-;-1:-1:-1;;;;;3366:33:15;;;;;;;;;;;;-1:-1:-1;3366:33:15;;;:89;;:37;:89;:::i;:::-;3335:8;:121::i;:::-;-1:-1:-1;3473:4:15;3184:300;;;;;:::o;1567:81:17:-;1632:9;;;;1567:81;:::o;3879:207:15:-;3959:4;3975:83;3984:12;:10;:12::i;:::-;3998:7;4007:50;4046:10;4007:11;:25;4019:12;:10;:12::i;:::-;-1:-1:-1;;;;;4007:25:15;;;;;;;;;;;;;;;;;-1:-1:-1;4007:25:15;;;:34;;;;;;;;;;;:50;:38;:50;:::i;685:140:18:-;759:4;544:22:13;553:12;:10;:12::i;:::-;544:8;:22::i;:::-;536:83;;;;-1:-1:-1;;;536:83:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;775:22:18;781:7;790:6;775:5;:22::i;516:81:16:-;563:27;569:12;:10;:12::i;:::-;583:6;563:5;:27::i;459:22:10:-;;;-1:-1:-1;;;;;459:22:10;;:::o;1783:108:15:-;-1:-1:-1;;;;;1866:18:15;1840:7;1866:18;;;:9;:18;;;;;;;1783:108::o;654:101:16:-;722:26;732:7;741:6;722:9;:26::i;:::-;654:101;;:::o;933:85:17:-;1004:7;997:14;;;;;;;;-1:-1:-1;;997:14:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;972:13;;997:14;;1004:7;;997:14;;1004:7;997:14;;;;;;;;;;;;;;;;;;;;;;;;756:90:13;544:22;553:12;:10;:12::i;544:22::-;536:83;;;;-1:-1:-1;;;536:83:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;820:19;831:7;820:10;:19::i;852:77::-;895:27;909:12;:10;:12::i;:::-;895:13;:27::i;:::-;852:77::o;4573:258:15:-;4658:4;4674:129;4683:12;:10;:12::i;:::-;4697:7;4706:96;4745:15;4706:96;;;;;;;;;;;;;;;;;:11;:25;4718:12;:10;:12::i;:::-;-1:-1:-1;;;;;4706:25:15;;;;;;;;;;;;;;;;;-1:-1:-1;4706:25:15;;;:34;;;;;;;;;;;:96;;:38;:96;:::i;2094:155::-;2163:4;2179:42;2189:12;:10;:12::i;:::-;2203:9;2214:6;2179:9;:42::i;643:107:13:-;699:4;722:21;:8;735:7;722:21;:12;:21;:::i;:::-;715:28;643:107;-1:-1:-1;;643:107:13:o;448:101:18:-;1024:12:20;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:20;;;;1059:12;1024:47;1016:106;;;;-1:-1:-1;;;1016:106:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;-1:-1:-1;;;;1198:19:20;;;;;1225:18;1213:4;1225:18;;;1170:80;513:29:18;535:6;513:21;:29::i;:::-;1268:14:20;1264:55;;;1307:5;1292:20;;-1:-1:-1;;1292:20:20;;;448:101:18;;:::o;368:80:8:-;414:3;;:29;;;-1:-1:-1;;;414:29:8;;423:10;414:29;;;;;;;;;;;;-1:-1:-1;;;;;414:3:8;;;;:8;;:29;;;;;;;;;;;;;;;:3;;:29;;;5:2:-1;;;;30:1;27;20:12;5:2;414:29:8;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;414:29:8;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;368:80:8:o;2307:132:15:-;-1:-1:-1;;;;;2405:18:15;;;2379:7;2405:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;2307:132::o;223:20:8:-;;;-1:-1:-1;;;;;223:20:8;;:::o;867:96:11:-;946:10;867:96;:::o;7428:332:15:-;-1:-1:-1;;;;;7521:19:15;;7513:68;;;;-1:-1:-1;;;7513:68:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7599:21:15;;7591:68;;;;-1:-1:-1;;;7591:68:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7670:18:15;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;7721:32;;;;;;;;;;;;;;;;;7428:332;;;:::o;1409:498:20:-;1820:4;1864:17;1895:7;1409:498;:::o;5305:464:15:-;-1:-1:-1;;;;;5402:20:15;;5394:70;;;;-1:-1:-1;;;5394:70:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5482:23:15;;5474:71;;;;-1:-1:-1;;;5474:71:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5576;5598:6;5576:71;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5576:17:15;;;;;;:9;:17;;;;;;;:71;;:21;:71;:::i;:::-;-1:-1:-1;;;;;5556:17:15;;;;;;;:9;:17;;;;;;:91;;;;5680:20;;;;;;;:32;;5705:6;5680:32;:24;:32;:::i;:::-;-1:-1:-1;;;;;5657:20:15;;;;;;;:9;:20;;;;;;;;;:55;;;;5727:35;;;;;;;5657:20;;5727:35;;;;;;;;;;;;;5305:464;;;:::o;1732:187:14:-;1818:7;1853:12;1845:6;;;;1837:29;;;;-1:-1:-1;;;1837:29:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1837:29:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1888:5:14;;;1732:187::o;834:176::-;892:7;923:5;;;946:6;;;;938:46;;;;;-1:-1:-1;;;938:46:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;1002:1;834:176;-1:-1:-1;;;834:176:14:o;6039:302:15:-;-1:-1:-1;;;;;6114:21:15;;6106:65;;;;;-1:-1:-1;;;6106:65:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;6197:12;;:24;;6214:6;6197:24;:16;:24;:::i;:::-;6182:12;:39;-1:-1:-1;;;;;6252:18:15;;;;;;:9;:18;;;;;;:30;;6275:6;6252:30;:22;:30;:::i;:::-;-1:-1:-1;;;;;6231:18:15;;;;;;:9;:18;;;;;;;;:51;;;;6297:37;;;;;;;6231:18;;;;6297:37;;;;;;;;;;6039:302;;:::o;6661:342::-;-1:-1:-1;;;;;6736:21:15;;6728:67;;;;-1:-1:-1;;;6728:67:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6827:68;6850:6;6827:68;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6827:18:15;;;;;;:9;:18;;;;;;;:68;;:22;:68;:::i;:::-;-1:-1:-1;;;;;6806:18:15;;;;;;:9;:18;;;;;:89;6920:12;;:24;;6937:6;6920:24;:16;:24;:::i;:::-;6905:12;:39;6959:37;;;;;;;;6985:1;;-1:-1:-1;;;;;6959:37:15;;;;;;;;;;;;6661:342;;:::o;7938:229::-;8009:22;8015:7;8024:6;8009:5;:22::i;:::-;8041:119;8050:7;8059:12;:10;:12::i;:::-;8073:86;8112:6;8073:86;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;8073:20:15;;;;;;:11;:20;;;;;;8094:12;:10;:12::i;935:119:13:-;991:21;:8;1004:7;991:21;:12;:21;:::i;:::-;1027:20;;-1:-1:-1;;;;;1027:20:13;;;;;;;;935:119;:::o;1060:127::-;1119:24;:8;1135:7;1119:24;:15;:24;:::i;:::-;1158:22;;-1:-1:-1;;;;;1158:22:13;;;;;;;;1060:127;:::o;779:200:12:-;851:4;-1:-1:-1;;;;;875:21:12;;867:68;;;;-1:-1:-1;;;867:68:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;952:20:12;:11;:20;;;;;;;;;;;;;;;779:200::o;361:137:13:-;1024:12:20;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:20;;;;1059:12;1024:47;1016:106;;;;-1:-1:-1;;;1016:106:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;-1:-1:-1;;;;1198:19:20;;;;;1225:18;1213:4;1225:18;;;1170:80;431:16:13;440:6;431:8;:16::i;:::-;426:66;;463:18;474:6;463:10;:18::i;1274:134:14:-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;260:175:12:-;337:18;341:4;347:7;337:3;:18::i;:::-;336:19;328:63;;;;;-1:-1:-1;;;328:63:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;401:20:12;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;401:27:12;424:4;401:27;;;260:175::o;510:180::-;589:18;593:4;599:7;589:3;:18::i;:::-;581:64;;;;-1:-1:-1;;;581:64:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;655:20:12;678:5;655:20;;;;;;;;;;;:28;;-1:-1:-1;;655:28:12;;;510:180::o;185:322:8:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;185:322:8;;;-1:-1:-1;185:322:8;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;",
  "source": "pragma solidity ^0.5.0;\n\nimport '../interfaces/IADai.sol';\nimport './MockERC20.sol';\n// import '@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol';\n\n// MOCK ONLY\ncontract ADai is IADai, MockERC20 {\n  MockERC20 public dai;\n  constructor(MockERC20 daiAddress)\n    public\n    MockERC20('aDai', 'AD', 18, msg.sender)\n  {\n    dai = daiAddress;\n  }\n  function redeem(uint256 _amount) public {\n    dai.mint(msg.sender, _amount);\n  }\n  function redirectInterestStream(address _to) public {}\n}\n",
  "sourcePath": "/home/jasoons/Documents/temp/app/contracts/contracts/mocks/ADai.sol",
  "ast": {
    "absolutePath": "/home/jasoons/Documents/temp/app/contracts/contracts/mocks/ADai.sol",
    "exportedSymbols": {
      "ADai": [
        1604
      ]
    },
    "id": 1605,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1558,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:8"
      },
      {
        "absolutePath": "/home/jasoons/Documents/temp/app/contracts/contracts/interfaces/IADai.sol",
        "file": "../interfaces/IADai.sol",
        "id": 1559,
        "nodeType": "ImportDirective",
        "scope": 1605,
        "sourceUnit": 1490,
        "src": "25:33:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/jasoons/Documents/temp/app/contracts/contracts/mocks/MockERC20.sol",
        "file": "./MockERC20.sol",
        "id": 1560,
        "nodeType": "ImportDirective",
        "scope": 1605,
        "sourceUnit": 1678,
        "src": "59:25:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1561,
              "name": "IADai",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1489,
              "src": "202:5:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IADai_$1489",
                "typeString": "contract IADai"
              }
            },
            "id": 1562,
            "nodeType": "InheritanceSpecifier",
            "src": "202:5:8"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1563,
              "name": "MockERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1677,
              "src": "209:9:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockERC20_$1677",
                "typeString": "contract MockERC20"
              }
            },
            "id": 1564,
            "nodeType": "InheritanceSpecifier",
            "src": "209:9:8"
          }
        ],
        "contractDependencies": [
          1489,
          1677,
          1707,
          1911,
          2510,
          2551,
          2618,
          2667,
          2736,
          2805
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1604,
        "linearizedBaseContracts": [
          1604,
          1677,
          2618,
          2551,
          2667,
          1911,
          2510,
          1489,
          2736,
          1707,
          2805
        ],
        "name": "ADai",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 1566,
            "name": "dai",
            "nodeType": "VariableDeclaration",
            "scope": 1604,
            "src": "223:20:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MockERC20_$1677",
              "typeString": "contract MockERC20"
            },
            "typeName": {
              "contractScope": null,
              "id": 1565,
              "name": "MockERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1677,
              "src": "223:9:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockERC20_$1677",
                "typeString": "contract MockERC20"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1582,
              "nodeType": "Block",
              "src": "338:27:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1580,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1578,
                      "name": "dai",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1566,
                      "src": "344:3:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockERC20_$1677",
                        "typeString": "contract MockERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1579,
                      "name": "daiAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1568,
                      "src": "350:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockERC20_$1677",
                        "typeString": "contract MockERC20"
                      }
                    },
                    "src": "344:16:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MockERC20_$1677",
                      "typeString": "contract MockERC20"
                    }
                  },
                  "id": 1581,
                  "nodeType": "ExpressionStatement",
                  "src": "344:16:8"
                }
              ]
            },
            "documentation": null,
            "id": 1583,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "61446169",
                    "id": 1571,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "306:6:8",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_e483f46febe48d264218faea01528bcd2bc68930be3db9dcdaa97efa530a05e9",
                      "typeString": "literal_string \"aDai\""
                    },
                    "value": "aDai"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "4144",
                    "id": 1572,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "314:4:8",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_24655a250d8b099f3ae151325f4c6e6cf9aa4773ecfbe7a485b2e8b7107261a5",
                      "typeString": "literal_string \"AD\""
                    },
                    "value": "AD"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "3138",
                    "id": 1573,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "320:2:8",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_18_by_1",
                      "typeString": "int_const 18"
                    },
                    "value": "18"
                  },
                  {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 1574,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2820,
                      "src": "324:3:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 1575,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "324:10:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  }
                ],
                "id": 1576,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1570,
                  "name": "MockERC20",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1677,
                  "src": "296:9:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_MockERC20_$1677_$",
                    "typeString": "type(contract MockERC20)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "296:39:8"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1569,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1568,
                  "name": "daiAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 1583,
                  "src": "259:20:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_MockERC20_$1677",
                    "typeString": "contract MockERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1567,
                    "name": "MockERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1677,
                    "src": "259:9:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MockERC20_$1677",
                      "typeString": "contract MockERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "258:22:8"
            },
            "returnParameters": {
              "id": 1577,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "338:0:8"
            },
            "scope": 1604,
            "src": "247:118:8",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1596,
              "nodeType": "Block",
              "src": "408:40:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1591,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2820,
                          "src": "423:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1592,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "423:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1593,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1585,
                        "src": "435:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1588,
                        "name": "dai",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1566,
                        "src": "414:3:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$1677",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 1590,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2662,
                      "src": "414:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1594,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "414:29:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1595,
                  "nodeType": "ExpressionStatement",
                  "src": "414:29:8"
                }
              ]
            },
            "documentation": null,
            "id": 1597,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "redeem",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1586,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1585,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1597,
                  "src": "384:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1584,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "384:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "383:17:8"
            },
            "returnParameters": {
              "id": 1587,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "408:0:8"
            },
            "scope": 1604,
            "src": "368:80:8",
            "stateMutability": "nonpayable",
            "superFunction": 1483,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1602,
              "nodeType": "Block",
              "src": "503:2:8",
              "statements": []
            },
            "documentation": null,
            "id": 1603,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "redirectInterestStream",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1600,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1599,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 1603,
                  "src": "483:11:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1598,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "483:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "482:13:8"
            },
            "returnParameters": {
              "id": 1601,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "503:0:8"
            },
            "scope": 1604,
            "src": "451:54:8",
            "stateMutability": "nonpayable",
            "superFunction": 1488,
            "visibility": "public"
          }
        ],
        "scope": 1605,
        "src": "185:322:8"
      }
    ],
    "src": "0:508:8"
  },
  "legacyAST": {
    "absolutePath": "/home/jasoons/Documents/temp/app/contracts/contracts/mocks/ADai.sol",
    "exportedSymbols": {
      "ADai": [
        1604
      ]
    },
    "id": 1605,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1558,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:8"
      },
      {
        "absolutePath": "/home/jasoons/Documents/temp/app/contracts/contracts/interfaces/IADai.sol",
        "file": "../interfaces/IADai.sol",
        "id": 1559,
        "nodeType": "ImportDirective",
        "scope": 1605,
        "sourceUnit": 1490,
        "src": "25:33:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/jasoons/Documents/temp/app/contracts/contracts/mocks/MockERC20.sol",
        "file": "./MockERC20.sol",
        "id": 1560,
        "nodeType": "ImportDirective",
        "scope": 1605,
        "sourceUnit": 1678,
        "src": "59:25:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1561,
              "name": "IADai",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1489,
              "src": "202:5:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IADai_$1489",
                "typeString": "contract IADai"
              }
            },
            "id": 1562,
            "nodeType": "InheritanceSpecifier",
            "src": "202:5:8"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1563,
              "name": "MockERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1677,
              "src": "209:9:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockERC20_$1677",
                "typeString": "contract MockERC20"
              }
            },
            "id": 1564,
            "nodeType": "InheritanceSpecifier",
            "src": "209:9:8"
          }
        ],
        "contractDependencies": [
          1489,
          1677,
          1707,
          1911,
          2510,
          2551,
          2618,
          2667,
          2736,
          2805
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1604,
        "linearizedBaseContracts": [
          1604,
          1677,
          2618,
          2551,
          2667,
          1911,
          2510,
          1489,
          2736,
          1707,
          2805
        ],
        "name": "ADai",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 1566,
            "name": "dai",
            "nodeType": "VariableDeclaration",
            "scope": 1604,
            "src": "223:20:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MockERC20_$1677",
              "typeString": "contract MockERC20"
            },
            "typeName": {
              "contractScope": null,
              "id": 1565,
              "name": "MockERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1677,
              "src": "223:9:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockERC20_$1677",
                "typeString": "contract MockERC20"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1582,
              "nodeType": "Block",
              "src": "338:27:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1580,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1578,
                      "name": "dai",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1566,
                      "src": "344:3:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockERC20_$1677",
                        "typeString": "contract MockERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1579,
                      "name": "daiAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1568,
                      "src": "350:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockERC20_$1677",
                        "typeString": "contract MockERC20"
                      }
                    },
                    "src": "344:16:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MockERC20_$1677",
                      "typeString": "contract MockERC20"
                    }
                  },
                  "id": 1581,
                  "nodeType": "ExpressionStatement",
                  "src": "344:16:8"
                }
              ]
            },
            "documentation": null,
            "id": 1583,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "61446169",
                    "id": 1571,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "306:6:8",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_e483f46febe48d264218faea01528bcd2bc68930be3db9dcdaa97efa530a05e9",
                      "typeString": "literal_string \"aDai\""
                    },
                    "value": "aDai"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "4144",
                    "id": 1572,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "314:4:8",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_24655a250d8b099f3ae151325f4c6e6cf9aa4773ecfbe7a485b2e8b7107261a5",
                      "typeString": "literal_string \"AD\""
                    },
                    "value": "AD"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "3138",
                    "id": 1573,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "320:2:8",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_18_by_1",
                      "typeString": "int_const 18"
                    },
                    "value": "18"
                  },
                  {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 1574,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2820,
                      "src": "324:3:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 1575,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "324:10:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  }
                ],
                "id": 1576,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1570,
                  "name": "MockERC20",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1677,
                  "src": "296:9:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_MockERC20_$1677_$",
                    "typeString": "type(contract MockERC20)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "296:39:8"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1569,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1568,
                  "name": "daiAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 1583,
                  "src": "259:20:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_MockERC20_$1677",
                    "typeString": "contract MockERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1567,
                    "name": "MockERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1677,
                    "src": "259:9:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MockERC20_$1677",
                      "typeString": "contract MockERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "258:22:8"
            },
            "returnParameters": {
              "id": 1577,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "338:0:8"
            },
            "scope": 1604,
            "src": "247:118:8",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1596,
              "nodeType": "Block",
              "src": "408:40:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1591,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2820,
                          "src": "423:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1592,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "423:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1593,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1585,
                        "src": "435:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1588,
                        "name": "dai",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1566,
                        "src": "414:3:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$1677",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 1590,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2662,
                      "src": "414:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1594,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "414:29:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1595,
                  "nodeType": "ExpressionStatement",
                  "src": "414:29:8"
                }
              ]
            },
            "documentation": null,
            "id": 1597,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "redeem",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1586,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1585,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1597,
                  "src": "384:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1584,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "384:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "383:17:8"
            },
            "returnParameters": {
              "id": 1587,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "408:0:8"
            },
            "scope": 1604,
            "src": "368:80:8",
            "stateMutability": "nonpayable",
            "superFunction": 1483,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1602,
              "nodeType": "Block",
              "src": "503:2:8",
              "statements": []
            },
            "documentation": null,
            "id": 1603,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "redirectInterestStream",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1600,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1599,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 1603,
                  "src": "483:11:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1598,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "483:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "482:13:8"
            },
            "returnParameters": {
              "id": 1601,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "503:0:8"
            },
            "scope": 1604,
            "src": "451:54:8",
            "stateMutability": "nonpayable",
            "superFunction": 1488,
            "visibility": "public"
          }
        ],
        "scope": 1605,
        "src": "185:322:8"
      }
    ],
    "src": "0:508:8"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.23",
  "updatedAt": "2020-03-31T21:09:44.209Z",
  "devdoc": {
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}.     * Requirements:     * - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "burn(uint256)": {
        "details": "Destroys `amount` tokens from the caller.     * See {ERC20-_burn}."
      },
      "burnFrom(address,uint256)": {
        "details": "See {ERC20-_burnFrom}."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei.     * NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address."
      },
      "initialize(string,string,uint8)": {
        "details": "Sets the values for `name`, `symbol`, and `decimals`. All three of these values are immutable: they can only be set once during construction."
      },
      "mint(address,uint256)": {
        "details": "See {ERC20-_mint}.     * Requirements:     * - the caller must have the {MinterRole}."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}.     * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20};     * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`."
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}