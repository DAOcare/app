{
  "contractName": "MockERC20",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "internalType": "uint8",
          "name": "decimals",
          "type": "uint8"
        },
        {
          "internalType": "address",
          "name": "minter",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MinterAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MinterRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addMinter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burnFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "internalType": "uint8",
          "name": "decimals",
          "type": "uint8"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isMinter",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceMinter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "steward",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"MinterAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"MinterRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addMinter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isMinter\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceMinter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"steward\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"allowance(address,address)\":{\"details\":\"See `IERC20.allowance`.\"},\"approve(address,uint256)\":{\"details\":\"See `IERC20.approve`.     * Requirements:     * - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See `IERC20.balanceOf`.\"},\"burn(uint256)\":{\"details\":\"Destoys `amount` tokens from the caller.     * See `ERC20._burn`.\"},\"burnFrom(address,uint256)\":{\"details\":\"See `ERC20._burnFrom`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei.     * > Note that this information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including `IERC20.balanceOf` and `IERC20.transfer`.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to `approve` that can be used as a mitigation for problems described in `IERC20.approve`.     * Emits an `Approval` event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to `approve` that can be used as a mitigation for problems described in `IERC20.approve`.     * Emits an `Approval` event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address.\"},\"initialize(string,string,uint8)\":{\"details\":\"Sets the values for `name`, `symbol`, and `decimals`. All three of these values are immutable: they can only be set once during construction.\"},\"mint(address,uint256)\":{\"details\":\"See `ERC20._mint`.     * Requirements:     * - the caller must have the `MinterRole`.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See `IERC20.totalSupply`.\"},\"transfer(address,uint256)\":{\"details\":\"See `IERC20.transfer`.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See `IERC20.transferFrom`.     * Emits an `Approval` event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of `ERC20`;     * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `value`. - the caller must have allowance for `sender`'s tokens of at least `amount`.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/johanthan/Code/hackathons/app/contracts/contracts/mocks/MockERC20.sol\":\"MockERC20\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/johanthan/Code/hackathons/app/contracts/contracts/mocks/MockERC20.sol\":{\"keccak256\":\"0x2d01a5b1b0deeb22096cbe98367eeb632bfa4f531d7833f862f80c0c7f9a6aeb\",\"urls\":[\"bzz-raw://110b1d4785a7f4ec62fb9e64000f75cdc539d54c3108b8d2c1fa5ac475922a02\",\"dweb:/ipfs/QmTUuM8cLuMTnwwiyHU2VRakHLBbzc7kn8ktRZDQtxTZWF\"]},\"@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol\":{\"keccak256\":\"0x0d4306da5305cb78f09c70c18ec86dbc66f22fa5ade90edc20e1ab88e16d4d10\",\"urls\":[\"bzz-raw://c89dee1b8e96cb83f529b8b5c93be6b420c1913363a3fed01241942f08cc968f\",\"dweb:/ipfs/QmfWWwzg9hah3YwZRFWvAwq91HLjCHkKnxXqP6uLGURUou\"]},\"@openzeppelin/contracts-ethereum-package/contracts/access/Roles.sol\":{\"keccak256\":\"0xb002c378d7b82a101bd659c341518953ca0919d342c0a400196982c0e7e7bcdb\",\"urls\":[\"bzz-raw://00a788c4631466c220b385bdd100c571d24b2deccd657615cfbcef6cadf669a4\",\"dweb:/ipfs/QmTEwDbjJNxmMNCDMqtuou3dyM8Wtp8Q9NFvn7SAVM7Jf3\"]},\"@openzeppelin/contracts-ethereum-package/contracts/access/roles/MinterRole.sol\":{\"keccak256\":\"0xdf50b7ae128ae6234bf297a03a7622b3d146734479b26b749052e61ee9dae650\",\"urls\":[\"bzz-raw://93218d23526253d8e8634e5f5be8c21e3c46f12992eae378b202ca22d48564a0\",\"dweb:/ipfs/QmfG4XhTbsxnzCGXgsvxWmuJtU8snNaMEpW9drGde2yY6S\"]},\"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x4ccf2d7b51873db1ccfd54ca2adae5eac3b184f9699911ed4490438419f1c690\",\"urls\":[\"bzz-raw://d62d769b2219d5de39013093412623e624fa887f871826ea3bae6052ee893610\",\"dweb:/ipfs/QmV3yVktya1s617QmuzQR2CfuJgUi3dR2xEZY9ecmqZ2G1\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xec9f5e2dd33c13f1c1a63b22257724b61d2af536a2d22b2343144e1044b005fe\",\"urls\":[\"bzz-raw://ed49a07c7fa5f07a2e5fff28f07933bf56f8fd932be3c90e797e4d5c4689f94f\",\"dweb:/ipfs/QmdNEMKyATnnccVv8kip5eZFyuY77PU9SrBYVptioZC6pV\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Burnable.sol\":{\"keccak256\":\"0xa8d5fc6a480f6de5320c06f397e810198bf4a6c8b0b2405a4b28fb3909c3771e\",\"urls\":[\"bzz-raw://1c01ff2789027e0a9cbaaeabbc239d59906b40776e2936fcbdbc92dab7a4f912\",\"dweb:/ipfs/QmPYwzjB1GcQndyFqUNkpHNXs1CqxBqE3diVDWuWs5UaDb\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Detailed.sol\":{\"keccak256\":\"0x836e5248258c1eeef170a2b394d74cdec21adfbfca71a8feac303339182c4a39\",\"urls\":[\"bzz-raw://5a429cd7eac29f48bcbb6981f34ba43232e0fcb2bf9e752d2aaa2a64a27e07d5\",\"dweb:/ipfs/QmaFoHVPCY9Z5iZjZuwxq6pJ8cEqZdy7foLNNp46BzFNju\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Mintable.sol\":{\"keccak256\":\"0xcae60acc572a549182cd7b26a169dbe5154ad0602cfb6c37533e9ee4ec1b4b06\",\"urls\":[\"bzz-raw://8d2bcd2a72821122b854e9467276090df516c50b34860d170164f4f080d1e579\",\"dweb:/ipfs/QmbxUTBMdADhXPAfzaPXFbAHEhYZyugdHwedNh43W1BUmt\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x90e8c2521653bbb1768b05889c5760031e688d9cd361f167489b89215e201b95\",\"urls\":[\"bzz-raw://d0abb99bb8bfc2bc0a89902b8ed1dc0442ad08cc78cee64c291b3df6a27bcccc\",\"dweb:/ipfs/QmP5NaEwZthQeM2ESz4WTT3osrP7jhbvu7ocbttBi2JAw6\"]},\"@openzeppelin/upgrades/contracts/Initializable.sol\":{\"keccak256\":\"0xf79d9851c085aa8412e87d7a26d3485488fe12538ecb4e317ce41fc1f2c3a16a\",\"urls\":[\"bzz-raw://6af1a35ad6aed2169ce9f44095438b3192cd6066903908f769d5c49a06a0caf8\",\"dweb:/ipfs/QmaH41CwJ7WrMQwSnbfCKuL2pd8bxF7sbGSLPZb6JaHBFF\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162001c0138038062001c01833981810160405260808110156200003757600080fd5b81019080805160405193929190846401000000008211156200005857600080fd5b9083019060208201858111156200006e57600080fd5b82516401000000008111828201881017156200008957600080fd5b82525081516020918201929091019080838360005b83811015620000b85781810151838201526020016200009e565b50505050905090810190601f168015620000e65780820380516001836020036101000a031916815260200191505b50604052602001805160405193929190846401000000008211156200010a57600080fd5b9083019060208201858111156200012057600080fd5b82516401000000008111828201881017156200013b57600080fd5b82525081516020918201929091019080838360005b838110156200016a57818101518382015260200162000150565b50505050905090810190601f168015620001985780820380516001836020036101000a031916815260200191505b50604090815260208201519101519092509050620001c684848464010000000062000654620001e982021704565b620001df81640100000000620009fa620002f682021704565b5050505062000709565b600054610100900460ff16806200020e57506200020e640100000000620003dd810204565b806200021d575060005460ff16155b62000274576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e81526020018062001bd3602e913960400191505060405180910390fd5b600054610100900460ff16158015620002a0576000805460ff1961ff0019909116610100171660011790555b8351620002b59060ff90602087019062000667565b508251620002cc9061010090602086019062000667565b50610101805460ff191660ff84161790558015620002f0576000805461ff00191690555b50505050565b600054610100900460ff16806200031b57506200031b640100000000620003dd810204565b806200032a575060005460ff16155b62000381576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e81526020018062001bd3602e913960400191505060405180910390fd5b600054610100900460ff16158015620003ad576000805460ff1961ff0019909116610100171660011790555b620003c682640100000000620010e7620003e482021704565b8015620003d9576000805461ff00191690555b5050565b303b155b90565b600054610100900460ff168062000409575062000409640100000000620003dd810204565b8062000418575060005460ff16155b6200046f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e81526020018062001bd3602e913960400191505060405180910390fd5b600054610100900460ff161580156200049b576000805460ff1961ff0019909116610100171660011790555b620004af82640100000000620004c8810204565b620003c657620003c682640100000000620004eb810204565b6000620004e56068836401000000006200107d6200053d82021704565b92915050565b620005066068826401000000006200118d620005c082021704565b604051600160a060020a038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b6000600160a060020a038216620005a0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602281526020018062001bb16022913960400191505060405180910390fd5b50600160a060020a03166000908152602091909152604090205460ff1690565b620005d582826401000000006200053d810204565b156200064257604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500604482015290519081900360640190fd5b600160a060020a0316600090815260209190915260409020805460ff19166001179055565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620006aa57805160ff1916838001178555620006da565b82800160010185558215620006da579182015b82811115620006da578251825591602001919060010190620006bd565b50620006e8929150620006ec565b5090565b620003e191905b80821115620006e85760008155600101620006f3565b61149880620007196000396000f3fe608060405234801561001057600080fd5b5060043610610149576000357c01000000000000000000000000000000000000000000000000000000009004806370a08231116100ca578063a457c2d71161008e578063a457c2d7146104ce578063a9059cbb146104fa578063aa271e1a14610526578063c4d66de81461054c578063dd62ed3e1461057257610149565b806370a082311461044657806379cc67901461046c57806395d89b4114610498578063983b2d56146104a057806398650275146104c657610149565b8063313ce56711610111578063313ce5671461038f57806339509351146103ad57806340c10f19146103d957806342966c6814610405578063637eea191461042257610149565b806306fdde031461014e578063095ea7b3146101cb5780631624f6c61461020b57806318160ddd1461033f57806323b872dd14610359575b600080fd5b6101566105a0565b6040805160208082528351818301528351919283929083019185019080838360005b83811015610190578181015183820152602001610178565b50505050905090810190601f1680156101bd5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101f7600480360360408110156101e157600080fd5b50600160a060020a038135169060200135610637565b604080519115158252519081900360200190f35b61033d6004803603606081101561022157600080fd5b81019060208101813564010000000081111561023c57600080fd5b82018360208201111561024e57600080fd5b8035906020019184600183028401116401000000008311171561027057600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092959493602081019350359150506401000000008111156102c357600080fd5b8201836020820111156102d557600080fd5b803590602001918460018302840111640100000000831117156102f757600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295505050903560ff1691506106549050565b005b610347610735565b60408051918252519081900360200190f35b6101f76004803603606081101561036f57600080fd5b50600160a060020a0381358116916020810135909116906040013561073b565b6103976107b0565b6040805160ff9092168252519081900360200190f35b6101f7600480360360408110156103c357600080fd5b50600160a060020a0381351690602001356107ba565b6101f7600480360360408110156103ef57600080fd5b50600160a060020a03813516906020013561080e565b61033d6004803603602081101561041b57600080fd5b5035610868565b61042a61087c565b60408051600160a060020a039092168252519081900360200190f35b6103476004803603602081101561045c57600080fd5b5035600160a060020a031661088c565b61033d6004803603604081101561048257600080fd5b50600160a060020a0381351690602001356108a7565b6101566108b5565b61033d600480360360208110156104b657600080fd5b5035600160a060020a0316610915565b61033d610967565b6101f7600480360360408110156104e457600080fd5b50600160a060020a038135169060200135610979565b6101f76004803603604081101561051057600080fd5b50600160a060020a0381351690602001356109cd565b6101f76004803603602081101561053c57600080fd5b5035600160a060020a03166109e1565b61033d6004803603602081101561056257600080fd5b5035600160a060020a03166109fa565b6103476004803603604081101561058857600080fd5b50600160a060020a0381358116916020013516610aa8565b60ff8054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561062c5780601f106106015761010080835404028352916020019161062c565b820191906000526020600020905b81548152906001019060200180831161060f57829003601f168201915b505050505090505b90565b600061064b610644610ad3565b8484610ad7565b50600192915050565b600054610100900460ff168061066d575061066d610bc9565b8061067b575060005460ff16155b6106b95760405160e560020a62461bcd02815260040180806020018281038252602e8152602001806113cc602e913960400191505060405180910390fd5b600054610100900460ff161580156106e4576000805460ff1961ff0019909116610100171660011790555b83516106f79060ff90602087019061127b565b50825161070c9061010090602086019061127b565b50610101805460ff191660ff8416179055801561072f576000805461ff00191690555b50505050565b60355490565b6000610748848484610bcf565b6107a684610754610ad3565b600160a060020a03871660009081526034602052604081206107a19187919061077b610ad3565b600160a060020a031681526020810191909152604001600020549063ffffffff610d1916565b610ad7565b5060019392505050565b6101015460ff1690565b600061064b6107c7610ad3565b846107a185603460006107d8610ad3565b600160a060020a03908116825260208083019390935260409182016000908120918c16815292529020549063ffffffff610d7916565b600061082061081b610ad3565b6109e1565b61085e5760405160e560020a62461bcd0281526004018080602001828103825260308152602001806113596030913960400191505060405180910390fd5b61064b8383610ddd565b610879610873610ad3565b82610ed2565b50565b61013454600160a060020a031681565b600160a060020a031660009081526033602052604090205490565b6108b18282610fb0565b5050565b6101008054604080516020601f60026000196001871615880201909516949094049384018190048102820181019092528281526060939092909183018282801561062c5780601f106106015761010080835404028352916020019161062c565b61092061081b610ad3565b61095e5760405160e560020a62461bcd0281526004018080602001828103825260308152602001806113596030913960400191505060405180910390fd5b61087981610fed565b610977610972610ad3565b611035565b565b600061064b610986610ad3565b846107a18560346000610997610ad3565b600160a060020a03908116825260208083019390935260409182016000908120918c16815292529020549063ffffffff610d1916565b600061064b6109da610ad3565b8484610bcf565b60006109f460688363ffffffff61107d16565b92915050565b600054610100900460ff1680610a135750610a13610bc9565b80610a21575060005460ff16155b610a5f5760405160e560020a62461bcd02815260040180806020018281038252602e8152602001806113cc602e913960400191505060405180910390fd5b600054610100900460ff16158015610a8a576000805460ff1961ff0019909116610100171660011790555b610a93826110e7565b80156108b1576000805461ff00191690555050565b600160a060020a03918216600090815260346020908152604080832093909416825291909152205490565b3390565b600160a060020a038316610b1f5760405160e560020a62461bcd0281526004018080602001828103825260248152602001806114406024913960400191505060405180910390fd5b600160a060020a038216610b675760405160e560020a62461bcd0281526004018080602001828103825260228152602001806113376022913960400191505060405180910390fd5b600160a060020a03808416600081815260346020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b303b1590565b600160a060020a038316610c175760405160e560020a62461bcd02815260040180806020018281038252602581526020018061141b6025913960400191505060405180910390fd5b600160a060020a038216610c5f5760405160e560020a62461bcd0281526004018080602001828103825260238152602001806113146023913960400191505060405180910390fd5b600160a060020a038316600090815260336020526040902054610c88908263ffffffff610d1916565b600160a060020a038085166000908152603360205260408082209390935590841681522054610cbd908263ffffffff610d7916565b600160a060020a0380841660008181526033602090815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b600082821115610d73576040805160e560020a62461bcd02815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b600082820183811015610dd6576040805160e560020a62461bcd02815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b600160a060020a038216610e3b576040805160e560020a62461bcd02815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b603554610e4e908263ffffffff610d7916565b603555600160a060020a038216600090815260336020526040902054610e7a908263ffffffff610d7916565b600160a060020a03831660008181526033602090815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b600160a060020a038216610f1a5760405160e560020a62461bcd0281526004018080602001828103825260218152602001806113fa6021913960400191505060405180910390fd5b603554610f2d908263ffffffff610d1916565b603555600160a060020a038216600090815260336020526040902054610f59908263ffffffff610d1916565b600160a060020a0383166000818152603360209081526040808320949094558351858152935191937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929081900390910190a35050565b610fba8282610ed2565b6108b182610fc6610ad3565b600160a060020a03851660009081526034602052604081206107a19186919061077b610ad3565b610ffe60688263ffffffff61118d16565b604051600160a060020a038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b61104660688263ffffffff61121116565b604051600160a060020a038216907fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669290600090a250565b6000600160a060020a0382166110c75760405160e560020a62461bcd0281526004018080602001828103825260228152602001806113aa6022913960400191505060405180910390fd5b50600160a060020a03166000908152602091909152604090205460ff1690565b600054610100900460ff16806111005750611100610bc9565b8061110e575060005460ff16155b61114c5760405160e560020a62461bcd02815260040180806020018281038252602e8152602001806113cc602e913960400191505060405180910390fd5b600054610100900460ff16158015611177576000805460ff1961ff0019909116610100171660011790555b611180826109e1565b610a9357610a9382610fed565b611197828261107d565b156111ec576040805160e560020a62461bcd02815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500604482015290519081900360640190fd5b600160a060020a0316600090815260209190915260409020805460ff19166001179055565b61121b828261107d565b6112595760405160e560020a62461bcd0281526004018080602001828103825260218152602001806113896021913960400191505060405180910390fd5b600160a060020a0316600090815260209190915260409020805460ff19169055565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106112bc57805160ff19168380011785556112e9565b828001600101855582156112e9579182015b828111156112e95782518255916020019190600101906112ce565b506112f59291506112f9565b5090565b61063491905b808211156112f557600081556001016112ff56fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f20616464726573734d696e746572526f6c653a2063616c6c657220646f6573206e6f74206861766520746865204d696e74657220726f6c65526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c65526f6c65733a206163636f756e7420697320746865207a65726f2061646472657373436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a656445524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373a265627a7a7231582049b2330ac11721cfeb3e156fd994355d11d272d411bf1a71e7b03836dae3ee9064736f6c63430005100032526f6c65733a206163636f756e7420697320746865207a65726f2061646472657373436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a6564",
  "deployedBytecode": "0x608060405234801561001057600080fd5b5060043610610149576000357c01000000000000000000000000000000000000000000000000000000009004806370a08231116100ca578063a457c2d71161008e578063a457c2d7146104ce578063a9059cbb146104fa578063aa271e1a14610526578063c4d66de81461054c578063dd62ed3e1461057257610149565b806370a082311461044657806379cc67901461046c57806395d89b4114610498578063983b2d56146104a057806398650275146104c657610149565b8063313ce56711610111578063313ce5671461038f57806339509351146103ad57806340c10f19146103d957806342966c6814610405578063637eea191461042257610149565b806306fdde031461014e578063095ea7b3146101cb5780631624f6c61461020b57806318160ddd1461033f57806323b872dd14610359575b600080fd5b6101566105a0565b6040805160208082528351818301528351919283929083019185019080838360005b83811015610190578181015183820152602001610178565b50505050905090810190601f1680156101bd5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101f7600480360360408110156101e157600080fd5b50600160a060020a038135169060200135610637565b604080519115158252519081900360200190f35b61033d6004803603606081101561022157600080fd5b81019060208101813564010000000081111561023c57600080fd5b82018360208201111561024e57600080fd5b8035906020019184600183028401116401000000008311171561027057600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092959493602081019350359150506401000000008111156102c357600080fd5b8201836020820111156102d557600080fd5b803590602001918460018302840111640100000000831117156102f757600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295505050903560ff1691506106549050565b005b610347610735565b60408051918252519081900360200190f35b6101f76004803603606081101561036f57600080fd5b50600160a060020a0381358116916020810135909116906040013561073b565b6103976107b0565b6040805160ff9092168252519081900360200190f35b6101f7600480360360408110156103c357600080fd5b50600160a060020a0381351690602001356107ba565b6101f7600480360360408110156103ef57600080fd5b50600160a060020a03813516906020013561080e565b61033d6004803603602081101561041b57600080fd5b5035610868565b61042a61087c565b60408051600160a060020a039092168252519081900360200190f35b6103476004803603602081101561045c57600080fd5b5035600160a060020a031661088c565b61033d6004803603604081101561048257600080fd5b50600160a060020a0381351690602001356108a7565b6101566108b5565b61033d600480360360208110156104b657600080fd5b5035600160a060020a0316610915565b61033d610967565b6101f7600480360360408110156104e457600080fd5b50600160a060020a038135169060200135610979565b6101f76004803603604081101561051057600080fd5b50600160a060020a0381351690602001356109cd565b6101f76004803603602081101561053c57600080fd5b5035600160a060020a03166109e1565b61033d6004803603602081101561056257600080fd5b5035600160a060020a03166109fa565b6103476004803603604081101561058857600080fd5b50600160a060020a0381358116916020013516610aa8565b60ff8054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561062c5780601f106106015761010080835404028352916020019161062c565b820191906000526020600020905b81548152906001019060200180831161060f57829003601f168201915b505050505090505b90565b600061064b610644610ad3565b8484610ad7565b50600192915050565b600054610100900460ff168061066d575061066d610bc9565b8061067b575060005460ff16155b6106b95760405160e560020a62461bcd02815260040180806020018281038252602e8152602001806113cc602e913960400191505060405180910390fd5b600054610100900460ff161580156106e4576000805460ff1961ff0019909116610100171660011790555b83516106f79060ff90602087019061127b565b50825161070c9061010090602086019061127b565b50610101805460ff191660ff8416179055801561072f576000805461ff00191690555b50505050565b60355490565b6000610748848484610bcf565b6107a684610754610ad3565b600160a060020a03871660009081526034602052604081206107a19187919061077b610ad3565b600160a060020a031681526020810191909152604001600020549063ffffffff610d1916565b610ad7565b5060019392505050565b6101015460ff1690565b600061064b6107c7610ad3565b846107a185603460006107d8610ad3565b600160a060020a03908116825260208083019390935260409182016000908120918c16815292529020549063ffffffff610d7916565b600061082061081b610ad3565b6109e1565b61085e5760405160e560020a62461bcd0281526004018080602001828103825260308152602001806113596030913960400191505060405180910390fd5b61064b8383610ddd565b610879610873610ad3565b82610ed2565b50565b61013454600160a060020a031681565b600160a060020a031660009081526033602052604090205490565b6108b18282610fb0565b5050565b6101008054604080516020601f60026000196001871615880201909516949094049384018190048102820181019092528281526060939092909183018282801561062c5780601f106106015761010080835404028352916020019161062c565b61092061081b610ad3565b61095e5760405160e560020a62461bcd0281526004018080602001828103825260308152602001806113596030913960400191505060405180910390fd5b61087981610fed565b610977610972610ad3565b611035565b565b600061064b610986610ad3565b846107a18560346000610997610ad3565b600160a060020a03908116825260208083019390935260409182016000908120918c16815292529020549063ffffffff610d1916565b600061064b6109da610ad3565b8484610bcf565b60006109f460688363ffffffff61107d16565b92915050565b600054610100900460ff1680610a135750610a13610bc9565b80610a21575060005460ff16155b610a5f5760405160e560020a62461bcd02815260040180806020018281038252602e8152602001806113cc602e913960400191505060405180910390fd5b600054610100900460ff16158015610a8a576000805460ff1961ff0019909116610100171660011790555b610a93826110e7565b80156108b1576000805461ff00191690555050565b600160a060020a03918216600090815260346020908152604080832093909416825291909152205490565b3390565b600160a060020a038316610b1f5760405160e560020a62461bcd0281526004018080602001828103825260248152602001806114406024913960400191505060405180910390fd5b600160a060020a038216610b675760405160e560020a62461bcd0281526004018080602001828103825260228152602001806113376022913960400191505060405180910390fd5b600160a060020a03808416600081815260346020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b303b1590565b600160a060020a038316610c175760405160e560020a62461bcd02815260040180806020018281038252602581526020018061141b6025913960400191505060405180910390fd5b600160a060020a038216610c5f5760405160e560020a62461bcd0281526004018080602001828103825260238152602001806113146023913960400191505060405180910390fd5b600160a060020a038316600090815260336020526040902054610c88908263ffffffff610d1916565b600160a060020a038085166000908152603360205260408082209390935590841681522054610cbd908263ffffffff610d7916565b600160a060020a0380841660008181526033602090815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b600082821115610d73576040805160e560020a62461bcd02815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b600082820183811015610dd6576040805160e560020a62461bcd02815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b600160a060020a038216610e3b576040805160e560020a62461bcd02815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b603554610e4e908263ffffffff610d7916565b603555600160a060020a038216600090815260336020526040902054610e7a908263ffffffff610d7916565b600160a060020a03831660008181526033602090815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b600160a060020a038216610f1a5760405160e560020a62461bcd0281526004018080602001828103825260218152602001806113fa6021913960400191505060405180910390fd5b603554610f2d908263ffffffff610d1916565b603555600160a060020a038216600090815260336020526040902054610f59908263ffffffff610d1916565b600160a060020a0383166000818152603360209081526040808320949094558351858152935191937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929081900390910190a35050565b610fba8282610ed2565b6108b182610fc6610ad3565b600160a060020a03851660009081526034602052604081206107a19186919061077b610ad3565b610ffe60688263ffffffff61118d16565b604051600160a060020a038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b61104660688263ffffffff61121116565b604051600160a060020a038216907fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669290600090a250565b6000600160a060020a0382166110c75760405160e560020a62461bcd0281526004018080602001828103825260228152602001806113aa6022913960400191505060405180910390fd5b50600160a060020a03166000908152602091909152604090205460ff1690565b600054610100900460ff16806111005750611100610bc9565b8061110e575060005460ff16155b61114c5760405160e560020a62461bcd02815260040180806020018281038252602e8152602001806113cc602e913960400191505060405180910390fd5b600054610100900460ff16158015611177576000805460ff1961ff0019909116610100171660011790555b611180826109e1565b610a9357610a9382610fed565b611197828261107d565b156111ec576040805160e560020a62461bcd02815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500604482015290519081900360640190fd5b600160a060020a0316600090815260209190915260409020805460ff19166001179055565b61121b828261107d565b6112595760405160e560020a62461bcd0281526004018080602001828103825260218152602001806113896021913960400191505060405180910390fd5b600160a060020a0316600090815260209190915260409020805460ff19169055565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106112bc57805160ff19168380011785556112e9565b828001600101855582156112e9579182015b828111156112e95782518255916020019190600101906112ce565b506112f59291506112f9565b5090565b61063491905b808211156112f557600081556001016112ff56fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f20616464726573734d696e746572526f6c653a2063616c6c657220646f6573206e6f74206861766520746865204d696e74657220726f6c65526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c65526f6c65733a206163636f756e7420697320746865207a65726f2061646472657373436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a656445524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373a265627a7a7231582049b2330ac11721cfeb3e156fd994355d11d272d411bf1a71e7b03836dae3ee9064736f6c63430005100032",
  "sourceMap": "382:316:7:-;;;486:210;8:9:-1;5:2;;;30:1;27;20:12;5:2;486:210:7;;;;;;;;;;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;486:210:7;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;213:10;;261:11;244:29;;285:43;;;282:58;-1:-1;233:115;230:2;;;361:1;358;351:12;230:2;372:25;;-1:-1;486:210:7;;420:4:-1;411:14;;;;486:210:7;;;;;411:14:-1;486:210:7;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;486:210:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;213:10;;261:11;244:29;;285:43;;;282:58;-1:-1;233:115;230:2;;;361:1;358;351:12;230:2;372:25;;-1:-1;486:210:7;;420:4:-1;411:14;;;;486:210:7;;;;;411:14:-1;486:210:7;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;486:210:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;486:210:7;;;;;;;;;;;;;-1:-1:-1;486:210:7;-1:-1:-1;605:48:7;630:4;636:6;486:210;605:24;;;;;;:48;:::i;:::-;659:32;684:6;659:24;;;;;;:32;:::i;:::-;486:210;;;;382:316;;492:182:14;1024:12:17;;;;;;;;:31;;-1:-1:-1;1040:15:17;:13;;;;:15;:::i;:::-;1024:47;;;-1:-1:-1;1060:11:17;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;-1:-1:-1;;;;1198:19:17;;;;;1225:18;1213:4;1225:18;;;1170:80;599:12:14;;;;:5;;:12;;;;;:::i;:::-;-1:-1:-1;621:16:14;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;647:9:14;:20;;-1:-1:-1;;647:20:14;;;;;;;1264:55:17;;;;1307:5;1292:20;;-1:-1:-1;;1292:20:17;;;1264:55;492:182:14;;;;:::o;448:101:15:-;1024:12:17;;;;;;;;:31;;-1:-1:-1;1040:15:17;:13;;;;:15;:::i;:::-;1024:47;;;-1:-1:-1;1060:11:17;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;-1:-1:-1;;;;1198:19:17;;;;;1225:18;1213:4;1225:18;;;1170:80;513:29:15;535:6;513:21;;;;;;:29;:::i;:::-;1268:14:17;1264:55;;;1307:5;1292:20;;-1:-1:-1;;1292:20:17;;;1264:55;448:101:15;;:::o;1409:467:17:-;1842:7;1830:20;1864:7;1409:467;;:::o;361:137:10:-;1024:12:17;;;;;;;;:31;;-1:-1:-1;1040:15:17;:13;;;;:15;:::i;:::-;1024:47;;;-1:-1:-1;1060:11:17;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;-1:-1:-1;;;;1198:19:17;;;;;1225:18;1213:4;1225:18;;;1170:80;431:16:10;440:6;431:8;;;;:16;:::i;:::-;426:66;;463:18;474:6;463:10;;;;:18;:::i;643:107::-;699:4;722:21;:8;735:7;722:12;;;;;;:21;:::i;:::-;715:28;643:107;-1:-1:-1;;643:107:10:o;935:119::-;991:21;:8;1004:7;991:12;;;;;;:21;:::i;:::-;1027:20;;-1:-1:-1;;;;;1027:20:10;;;;;;;;935:119;:::o;779:200:9:-;851:4;-1:-1:-1;;;;;875:21:9;;867:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;952:20:9;:11;:20;;;;;;;;;;;;;;;779:200::o;260:175::-;337:18;341:4;347:7;337:3;;;;:18;:::i;:::-;336:19;328:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;401:20:9;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;401:27:9;424:4;401:27;;;260:175::o;382:316:7:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;382:316:7;;;-1:-1:-1;382:316:7;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "382:316:7:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;382:316:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;739:81:14;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;739:81:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2557:147:12;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2557:147:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;492:182:14;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;492:182:14;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;492:182:14;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;492:182:14;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;492:182:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;492:182:14;;;;;;;;-1:-1:-1;492:182:14;;-1:-1:-1;;21:11;5:28;;2:2;;;46:1;43;36:12;2:2;492:182:14;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;492:182:14;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;492:182:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;492:182:14;;-1:-1:-1;;;492:182:14;;;;;-1:-1:-1;492:182:14;;-1:-1:-1;492:182:14:i;:::-;;1632:89:12;;;:::i;:::-;;;;;;;;;;;;;;;;3161:231;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3161:231:12;;;;;;;;;;;;;;;;;:::i;1573:81:14:-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3787:207:12;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3787:207:12;;;;;;;;:::i;685:140:15:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;685:140:15;;;;;;;;:::i;515:81:13:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;515:81:13;;:::i;459:22:7:-;;;:::i;:::-;;;;-1:-1:-1;;;;;459:22:7;;;;;;;;;;;;;;1779:108:12;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1779:108:12;-1:-1:-1;;;;;1779:108:12;;:::i;653:101:13:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;653:101:13;;;;;;;;:::i;933:85:14:-;;;:::i;756:90:10:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;756:90:10;-1:-1:-1;;;;;756:90:10;;:::i;852:77::-;;;:::i;4481:217:12:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4481:217:12;;;;;;;;:::i;2090:139::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2090:139:12;;;;;;;;:::i;643:107:10:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;643:107:10;-1:-1:-1;;;;;643:107:10;;:::i;448:101:15:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;448:101:15;-1:-1:-1;;;;;448:101:15;;:::i;2287:132:12:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2287:132:12;;;;;;;;;;:::i;739:81:14:-;808:5;801:12;;;;;;;;-1:-1:-1;;801:12:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;776:13;;801:12;;808:5;;801:12;;808:5;801:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;739:81;;:::o;2557:147:12:-;2622:4;2638:38;2647:12;:10;:12::i;:::-;2661:7;2670:5;2638:8;:38::i;:::-;-1:-1:-1;2693:4:12;2557:147;;;;:::o;492:182:14:-;1024:12:17;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:17;;;;1059:12;1024:47;1016:106;;;;-1:-1:-1;;;;;1016:106:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;-1:-1:-1;;;;1198:19:17;;;;;1225:18;1213:4;1225:18;;;1170:80;599:12:14;;;;:5;;:12;;;;;:::i;:::-;-1:-1:-1;621:16:14;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;647:9:14;:20;;-1:-1:-1;;647:20:14;;;;;;;1264:55:17;;;;1307:5;1292:20;;-1:-1:-1;;1292:20:17;;;1264:55;492:182:14;;;;:::o;1632:89:12:-;1702:12;;1632:89;:::o;3161:231::-;3240:4;3256:26;3266:4;3272:2;3276:5;3256:9;:26::i;:::-;3292:72;3301:4;3307:12;:10;:12::i;:::-;-1:-1:-1;;;;;3321:17:12;;;;;;:11;:17;;;;;:42;;3357:5;;3321:17;3339:12;:10;:12::i;:::-;-1:-1:-1;;;;;3321:31:12;;;;;;;;;;;;-1:-1:-1;3321:31:12;;;:42;:35;:42;:::i;:::-;3292:8;:72::i;:::-;-1:-1:-1;3381:4:12;3161:231;;;;;:::o;1573:81:14:-;1638:9;;;;1573:81;:::o;3787:207:12:-;3867:4;3883:83;3892:12;:10;:12::i;:::-;3906:7;3915:50;3954:10;3915:11;:25;3927:12;:10;:12::i;:::-;-1:-1:-1;;;;;3915:25:12;;;;;;;;;;;;;;;;;-1:-1:-1;3915:25:12;;;:34;;;;;;;;;;;:50;:38;:50;:::i;685:140:15:-;759:4;544:22:10;553:12;:10;:12::i;:::-;544:8;:22::i;:::-;536:83;;;;-1:-1:-1;;;;;536:83:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;775:22:15;781:7;790:6;775:5;:22::i;515:81:13:-;562:27;568:12;:10;:12::i;:::-;582:6;562:5;:27::i;:::-;515:81;:::o;459:22:7:-;;;-1:-1:-1;;;;;459:22:7;;:::o;1779:108:12:-;-1:-1:-1;;;;;1862:18:12;1836:7;1862:18;;;:9;:18;;;;;;;1779:108::o;653:101:13:-;721:26;731:7;740:6;721:9;:26::i;:::-;653:101;;:::o;933:85:14:-;1004:7;997:14;;;;;;;;-1:-1:-1;;997:14:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;972:13;;997:14;;1004:7;;997:14;;1004:7;997:14;;;;;;;;;;;;;;;;;;;;;;;;756:90:10;544:22;553:12;:10;:12::i;544:22::-;536:83;;;;-1:-1:-1;;;;;536:83:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;820:19;831:7;820:10;:19::i;852:77::-;895:27;909:12;:10;:12::i;:::-;895:13;:27::i;:::-;852:77::o;4481:217:12:-;4566:4;4582:88;4591:12;:10;:12::i;:::-;4605:7;4614:55;4653:15;4614:11;:25;4626:12;:10;:12::i;:::-;-1:-1:-1;;;;;4614:25:12;;;;;;;;;;;;;;;;;-1:-1:-1;4614:25:12;;;:34;;;;;;;;;;;:55;:38;:55;:::i;2090:139::-;2151:4;2167:34;2177:12;:10;:12::i;:::-;2191:2;2195:5;2167:9;:34::i;643:107:10:-;699:4;722:21;:8;735:7;722:21;:12;:21;:::i;:::-;715:28;643:107;-1:-1:-1;;643:107:10:o;448:101:15:-;1024:12:17;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:17;;;;1059:12;1024:47;1016:106;;;;-1:-1:-1;;;;;1016:106:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;-1:-1:-1;;;;1198:19:17;;;;;1225:18;1213:4;1225:18;;;1170:80;513:29:15;535:6;513:21;:29::i;:::-;1268:14:17;1264:55;;;1307:5;1292:20;;-1:-1:-1;;1292:20:17;;;448:101:15;;:::o;2287:132:12:-;-1:-1:-1;;;;;2385:18:12;;;2359:7;2385:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;2287:132::o;791:88:8:-;862:10;791:88;:::o;7210:329:12:-;-1:-1:-1;;;;;7302:19:12;;7294:68;;;;-1:-1:-1;;;;;7294:68:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7380:21:12;;7372:68;;;;-1:-1:-1;;;;;7372:68:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7451:18:12;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:35;;;7501:31;;;;;;;;;;;;;;;;;7210:329;;;:::o;1409:467:17:-;1842:7;1830:20;1864:7;1409:467;:::o;5172:422:12:-;-1:-1:-1;;;;;5269:20:12;;5261:70;;;;-1:-1:-1;;;;;5261:70:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5349:23:12;;5341:71;;;;-1:-1:-1;;;;;5341:71:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5443:17:12;;;;;;:9;:17;;;;;;:29;;5465:6;5443:29;:21;:29;:::i;:::-;-1:-1:-1;;;;;5423:17:12;;;;;;;:9;:17;;;;;;:49;;;;5505:20;;;;;;;:32;;5530:6;5505:32;:24;:32;:::i;:::-;-1:-1:-1;;;;;5482:20:12;;;;;;;:9;:20;;;;;;;;;:55;;;;5552:35;;;;;;;5482:20;;5552:35;;;;;;;;;;;;;5172:422;;;:::o;1274:179:11:-;1332:7;1364:1;1359;:6;;1351:49;;;;;-1:-1:-1;;;;;1351:49:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1422:5:11;;;1274:179::o;834:176::-;892:7;923:5;;;946:6;;;;938:46;;;;;-1:-1:-1;;;;;938:46:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;1002:1;834:176;-1:-1:-1;;;834:176:11:o;5864:302:12:-;-1:-1:-1;;;;;5939:21:12;;5931:65;;;;;-1:-1:-1;;;;;5931:65:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;6022:12;;:24;;6039:6;6022:24;:16;:24;:::i;:::-;6007:12;:39;-1:-1:-1;;;;;6077:18:12;;;;;;:9;:18;;;;;;:30;;6100:6;6077:30;:22;:30;:::i;:::-;-1:-1:-1;;;;;6056:18:12;;;;;;:9;:18;;;;;;;;:51;;;;6122:37;;;;;;;6056:18;;;;6122:37;;;;;;;;;;5864:302;;:::o;6485:300::-;-1:-1:-1;;;;;6559:21:12;;6551:67;;;;-1:-1:-1;;;;;6551:67:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6644:12;;:23;;6661:5;6644:23;:16;:23;:::i;:::-;6629:12;:38;-1:-1:-1;;;;;6698:18:12;;;;;;:9;:18;;;;;;:29;;6721:5;6698:29;:22;:29;:::i;:::-;-1:-1:-1;;;;;6677:18:12;;;;;;:9;:18;;;;;;;;:50;;;;6742:36;;;;;;;6677:18;;6742:36;;;;;;;;;;;6485:300;;:::o;7716:189::-;7787:22;7793:7;7802:6;7787:5;:22::i;:::-;7819:79;7828:7;7837:12;:10;:12::i;:::-;-1:-1:-1;;;;;7851:20:12;;;;;;:11;:20;;;;;:46;;7890:6;;7851:20;7872:12;:10;:12::i;935:119:10:-;991:21;:8;1004:7;991:21;:12;:21;:::i;:::-;1027:20;;-1:-1:-1;;;;;1027:20:10;;;;;;;;935:119;:::o;1060:127::-;1119:24;:8;1135:7;1119:24;:15;:24;:::i;:::-;1158:22;;-1:-1:-1;;;;;1158:22:10;;;;;;;;1060:127;:::o;779:200:9:-;851:4;-1:-1:-1;;;;;875:21:9;;867:68;;;;-1:-1:-1;;;;;867:68:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;952:20:9;:11;:20;;;;;;;;;;;;;;;779:200::o;361:137:10:-;1024:12:17;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:17;;;;1059:12;1024:47;1016:106;;;;-1:-1:-1;;;;;1016:106:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;-1:-1:-1;;;;1198:19:17;;;;;1225:18;1213:4;1225:18;;;1170:80;431:16:10;440:6;431:8;:16::i;:::-;426:66;;463:18;474:6;463:10;:18::i;260:175:9:-;337:18;341:4;347:7;337:3;:18::i;:::-;336:19;328:63;;;;;-1:-1:-1;;;;;328:63:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;401:20:9;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;401:27:9;424:4;401:27;;;260:175::o;510:180::-;589:18;593:4;599:7;589:3;:18::i;:::-;581:64;;;;-1:-1:-1;;;;;581:64:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;655:20:9;678:5;655:20;;;;;;;;;;;:28;;-1:-1:-1;;655:28:9;;;510:180::o;382:316:7:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;382:316:7;;;-1:-1:-1;382:316:7;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;",
  "source": "pragma solidity ^0.5.0;\n\nimport '@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol';\nimport '@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Mintable.sol';\nimport '@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Burnable.sol';\nimport '@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Detailed.sol';\n\ncontract MockERC20 is ERC20, ERC20Mintable, ERC20Burnable, ERC20Detailed {\n  address public steward;\n\n  constructor(\n    string memory name,\n    string memory symbol,\n    uint8 decimals,\n    address minter\n  ) public {\n    ERC20Detailed.initialize(name, symbol, decimals);\n    ERC20Mintable.initialize(minter);\n  }\n}\n",
  "sourcePath": "/Users/johanthan/Code/hackathons/app/contracts/contracts/mocks/MockERC20.sol",
  "ast": {
    "absolutePath": "/Users/johanthan/Code/hackathons/app/contracts/contracts/mocks/MockERC20.sol",
    "exportedSymbols": {
      "MockERC20": [
        997
      ]
    },
    "id": 998,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 956,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:7"
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol",
        "id": 957,
        "nodeType": "ImportDirective",
        "scope": 998,
        "sourceUnit": 1769,
        "src": "25:82:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Mintable.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Mintable.sol",
        "id": 958,
        "nodeType": "ImportDirective",
        "scope": 998,
        "sourceUnit": 1926,
        "src": "108:90:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Burnable.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Burnable.sol",
        "id": 959,
        "nodeType": "ImportDirective",
        "scope": 998,
        "sourceUnit": 1810,
        "src": "199:90:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Detailed.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Detailed.sol",
        "id": 960,
        "nodeType": "ImportDirective",
        "scope": 998,
        "sourceUnit": 1877,
        "src": "290:90:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 961,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1768,
              "src": "404:5:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$1768",
                "typeString": "contract ERC20"
              }
            },
            "id": 962,
            "nodeType": "InheritanceSpecifier",
            "src": "404:5:7"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 963,
              "name": "ERC20Mintable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1925,
              "src": "411:13:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Mintable_$1925",
                "typeString": "contract ERC20Mintable"
              }
            },
            "id": 964,
            "nodeType": "InheritanceSpecifier",
            "src": "411:13:7"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 965,
              "name": "ERC20Burnable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1809,
              "src": "426:13:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Burnable_$1809",
                "typeString": "contract ERC20Burnable"
              }
            },
            "id": 966,
            "nodeType": "InheritanceSpecifier",
            "src": "426:13:7"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 967,
              "name": "ERC20Detailed",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1876,
              "src": "441:13:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Detailed_$1876",
                "typeString": "contract ERC20Detailed"
              }
            },
            "id": 968,
            "nodeType": "InheritanceSpecifier",
            "src": "441:13:7"
          }
        ],
        "contractDependencies": [
          1024,
          1228,
          1768,
          1809,
          1876,
          1925,
          1994,
          2057
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 997,
        "linearizedBaseContracts": [
          997,
          1876,
          1809,
          1925,
          1228,
          1768,
          1994,
          1024,
          2057
        ],
        "name": "MockERC20",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 970,
            "name": "steward",
            "nodeType": "VariableDeclaration",
            "scope": 997,
            "src": "459:22:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 969,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "459:7:7",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 995,
              "nodeType": "Block",
              "src": "599:97:7",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 984,
                        "name": "name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 972,
                        "src": "630:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 985,
                        "name": "symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 974,
                        "src": "636:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 986,
                        "name": "decimals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 976,
                        "src": "644:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 981,
                        "name": "ERC20Detailed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1876,
                        "src": "605:13:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC20Detailed_$1876_$",
                          "typeString": "type(contract ERC20Detailed)"
                        }
                      },
                      "id": 983,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1847,
                      "src": "605:24:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint8_$returns$__$",
                        "typeString": "function (string memory,string memory,uint8)"
                      }
                    },
                    "id": 987,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "605:48:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 988,
                  "nodeType": "ExpressionStatement",
                  "src": "605:48:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 992,
                        "name": "minter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 978,
                        "src": "684:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 989,
                        "name": "ERC20Mintable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1925,
                        "src": "659:13:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC20Mintable_$1925_$",
                          "typeString": "type(contract ERC20Mintable)"
                        }
                      },
                      "id": 991,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1901,
                      "src": "659:24:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 993,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "659:32:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 994,
                  "nodeType": "ExpressionStatement",
                  "src": "659:32:7"
                }
              ]
            },
            "documentation": null,
            "id": 996,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 979,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 972,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 996,
                  "src": "503:18:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 971,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "503:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 974,
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 996,
                  "src": "527:20:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 973,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "527:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 976,
                  "name": "decimals",
                  "nodeType": "VariableDeclaration",
                  "scope": 996,
                  "src": "553:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 975,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "553:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 978,
                  "name": "minter",
                  "nodeType": "VariableDeclaration",
                  "scope": 996,
                  "src": "573:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 977,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "573:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "497:94:7"
            },
            "returnParameters": {
              "id": 980,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "599:0:7"
            },
            "scope": 997,
            "src": "486:210:7",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 998,
        "src": "382:316:7"
      }
    ],
    "src": "0:699:7"
  },
  "legacyAST": {
    "absolutePath": "/Users/johanthan/Code/hackathons/app/contracts/contracts/mocks/MockERC20.sol",
    "exportedSymbols": {
      "MockERC20": [
        997
      ]
    },
    "id": 998,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 956,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:7"
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol",
        "id": 957,
        "nodeType": "ImportDirective",
        "scope": 998,
        "sourceUnit": 1769,
        "src": "25:82:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Mintable.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Mintable.sol",
        "id": 958,
        "nodeType": "ImportDirective",
        "scope": 998,
        "sourceUnit": 1926,
        "src": "108:90:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Burnable.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Burnable.sol",
        "id": 959,
        "nodeType": "ImportDirective",
        "scope": 998,
        "sourceUnit": 1810,
        "src": "199:90:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Detailed.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Detailed.sol",
        "id": 960,
        "nodeType": "ImportDirective",
        "scope": 998,
        "sourceUnit": 1877,
        "src": "290:90:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 961,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1768,
              "src": "404:5:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$1768",
                "typeString": "contract ERC20"
              }
            },
            "id": 962,
            "nodeType": "InheritanceSpecifier",
            "src": "404:5:7"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 963,
              "name": "ERC20Mintable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1925,
              "src": "411:13:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Mintable_$1925",
                "typeString": "contract ERC20Mintable"
              }
            },
            "id": 964,
            "nodeType": "InheritanceSpecifier",
            "src": "411:13:7"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 965,
              "name": "ERC20Burnable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1809,
              "src": "426:13:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Burnable_$1809",
                "typeString": "contract ERC20Burnable"
              }
            },
            "id": 966,
            "nodeType": "InheritanceSpecifier",
            "src": "426:13:7"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 967,
              "name": "ERC20Detailed",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1876,
              "src": "441:13:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Detailed_$1876",
                "typeString": "contract ERC20Detailed"
              }
            },
            "id": 968,
            "nodeType": "InheritanceSpecifier",
            "src": "441:13:7"
          }
        ],
        "contractDependencies": [
          1024,
          1228,
          1768,
          1809,
          1876,
          1925,
          1994,
          2057
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 997,
        "linearizedBaseContracts": [
          997,
          1876,
          1809,
          1925,
          1228,
          1768,
          1994,
          1024,
          2057
        ],
        "name": "MockERC20",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 970,
            "name": "steward",
            "nodeType": "VariableDeclaration",
            "scope": 997,
            "src": "459:22:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 969,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "459:7:7",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 995,
              "nodeType": "Block",
              "src": "599:97:7",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 984,
                        "name": "name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 972,
                        "src": "630:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 985,
                        "name": "symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 974,
                        "src": "636:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 986,
                        "name": "decimals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 976,
                        "src": "644:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 981,
                        "name": "ERC20Detailed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1876,
                        "src": "605:13:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC20Detailed_$1876_$",
                          "typeString": "type(contract ERC20Detailed)"
                        }
                      },
                      "id": 983,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1847,
                      "src": "605:24:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint8_$returns$__$",
                        "typeString": "function (string memory,string memory,uint8)"
                      }
                    },
                    "id": 987,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "605:48:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 988,
                  "nodeType": "ExpressionStatement",
                  "src": "605:48:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 992,
                        "name": "minter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 978,
                        "src": "684:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 989,
                        "name": "ERC20Mintable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1925,
                        "src": "659:13:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC20Mintable_$1925_$",
                          "typeString": "type(contract ERC20Mintable)"
                        }
                      },
                      "id": 991,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1901,
                      "src": "659:24:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 993,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "659:32:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 994,
                  "nodeType": "ExpressionStatement",
                  "src": "659:32:7"
                }
              ]
            },
            "documentation": null,
            "id": 996,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 979,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 972,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 996,
                  "src": "503:18:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 971,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "503:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 974,
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 996,
                  "src": "527:20:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 973,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "527:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 976,
                  "name": "decimals",
                  "nodeType": "VariableDeclaration",
                  "scope": 996,
                  "src": "553:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 975,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "553:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 978,
                  "name": "minter",
                  "nodeType": "VariableDeclaration",
                  "scope": 996,
                  "src": "573:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 977,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "573:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "497:94:7"
            },
            "returnParameters": {
              "id": 980,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "599:0:7"
            },
            "scope": 997,
            "src": "486:210:7",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 998,
        "src": "382:316:7"
      }
    ],
    "src": "0:699:7"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.6",
  "updatedAt": "2020-03-04T19:19:27.628Z",
  "devdoc": {
    "methods": {
      "allowance(address,address)": {
        "details": "See `IERC20.allowance`."
      },
      "approve(address,uint256)": {
        "details": "See `IERC20.approve`.     * Requirements:     * - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See `IERC20.balanceOf`."
      },
      "burn(uint256)": {
        "details": "Destoys `amount` tokens from the caller.     * See `ERC20._burn`."
      },
      "burnFrom(address,uint256)": {
        "details": "See `ERC20._burnFrom`."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei.     * > Note that this information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including `IERC20.balanceOf` and `IERC20.transfer`."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to `approve` that can be used as a mitigation for problems described in `IERC20.approve`.     * Emits an `Approval` event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to `approve` that can be used as a mitigation for problems described in `IERC20.approve`.     * Emits an `Approval` event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address."
      },
      "initialize(string,string,uint8)": {
        "details": "Sets the values for `name`, `symbol`, and `decimals`. All three of these values are immutable: they can only be set once during construction."
      },
      "mint(address,uint256)": {
        "details": "See `ERC20._mint`.     * Requirements:     * - the caller must have the `MinterRole`."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See `IERC20.totalSupply`."
      },
      "transfer(address,uint256)": {
        "details": "See `IERC20.transfer`.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See `IERC20.transferFrom`.     * Emits an `Approval` event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of `ERC20`;     * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `value`. - the caller must have allowance for `sender`'s tokens of at least `amount`."
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}